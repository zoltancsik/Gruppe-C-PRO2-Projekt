{"experiments": [{"name": "none", "game_instances": [{"game_id": 0, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Balcony', 'Library', 'Studio', 'Gallery', 'Recreation room', 'Bar', 'Foyer', 'Billiard room']", "Graph_Edges": "[('Balcony', 'Library'), ('Library', 'Studio'), ('Studio', 'Gallery'), ('Gallery', 'Recreation room'), ('Recreation room', 'Bar'), ('Bar', 'Foyer'), ('Foyer', 'Billiard room')]", "Current_Position": "Studio", "Picture_Name": "graph_1567.png", "Directions": "[('Balcony', ['north']), ('Library', ['west', 'south']), ('Studio', ['south', 'east']), ('Gallery', ['south', 'north']), ('Recreation room', ['east', 'north']), ('Bar', ['west', 'east']), ('Foyer', ['west', 'south']), ('Billiard room', ['north'])]", "Moves": "[{'node': 'Balcony', 'node_moves': [('north', 'Library')]}, {'node': 'Library', 'node_moves': [('west', 'Studio'), ('south', 'Balcony')]}, {'node': 'Library', 'node_moves': [('west', 'Studio'), ('south', 'Balcony')]}, {'node': 'Studio', 'node_moves': [('south', 'Gallery'), ('east', 'Library')]}, {'node': 'Studio', 'node_moves': [('south', 'Gallery'), ('east', 'Library')]}, {'node': 'Gallery', 'node_moves': [('south', 'Recreation room'), ('north', 'Studio')]}, {'node': 'Gallery', 'node_moves': [('south', 'Recreation room'), ('north', 'Studio')]}, {'node': 'Recreation room', 'node_moves': [('east', 'Bar'), ('north', 'Gallery')]}, {'node': 'Recreation room', 'node_moves': [('east', 'Bar'), ('north', 'Gallery')]}, {'node': 'Bar', 'node_moves': [('west', 'Recreation room'), ('east', 'Foyer')]}, {'node': 'Bar', 'node_moves': [('west', 'Recreation room'), ('east', 'Foyer')]}, {'node': 'Foyer', 'node_moves': [('west', 'Bar'), ('south', 'Billiard room')]}, {'node': 'Foyer', 'node_moves': [('west', 'Bar'), ('south', 'Billiard room')]}, {'node': 'Billiard room', 'node_moves': [('north', 'Foyer')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Library', 1)", "Second_Question_Answer": "('Bar', 1)", "Third_Question_Answer": "('Dining room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 2): 'Balcony', (2, 3): 'Library', (1, 3): 'Studio', (1, 2): 'Gallery', (1, 1): 'Recreation room', (2, 1): 'Bar', (3, 1): 'Foyer', (3, 0): 'Billiard room'}", "Strict": true}, {"game_id": 1, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Bathroom', 'Gallery', 'Exercise room', 'Playroom', 'Media room', 'Closet', 'Balcony', 'Workshop']", "Graph_Edges": "[('Bathroom', 'Gallery'), ('Gallery', 'Exercise room'), ('Exercise room', 'Playroom'), ('Exercise room', 'Workshop'), ('Playroom', 'Media room'), ('Playroom', 'Closet'), ('Closet', 'Balcony')]", "Current_Position": "Exercise room", "Picture_Name": "graph_907.png", "Directions": "[('Bathroom', ['west']), ('Gallery', ['south', 'east']), ('Exercise room', ['west', 'east', 'north']), ('Playroom', ['north', 'west', 'east']), ('Media room', ['east']), ('Closet', ['west', 'south']), ('Balcony', ['east']), ('Workshop', ['west'])]", "Moves": "[{'node': 'Bathroom', 'node_moves': [('west', 'Gallery')]}, {'node': 'Gallery', 'node_moves': [('south', 'Exercise room'), ('east', 'Bathroom')]}, {'node': 'Gallery', 'node_moves': [('south', 'Exercise room'), ('east', 'Bathroom')]}, {'node': 'Exercise room', 'node_moves': [('west', 'Playroom'), ('east', 'Workshop'), ('north', 'Gallery')]}, {'node': 'Exercise room', 'node_moves': [('west', 'Playroom'), ('east', 'Workshop'), ('north', 'Gallery')]}, {'node': 'Exercise room', 'node_moves': [('west', 'Playroom'), ('east', 'Workshop'), ('north', 'Gallery')]}, {'node': 'Playroom', 'node_moves': [('north', 'Closet'), ('west', 'Media room'), ('east', 'Exercise room')]}, {'node': 'Playroom', 'node_moves': [('north', 'Closet'), ('west', 'Media room'), ('east', 'Exercise room')]}, {'node': 'Playroom', 'node_moves': [('north', 'Closet'), ('west', 'Media room'), ('east', 'Exercise room')]}, {'node': 'Media room', 'node_moves': [('east', 'Playroom')]}, {'node': 'Closet', 'node_moves': [('west', 'Balcony'), ('south', 'Playroom')]}, {'node': 'Closet', 'node_moves': [('west', 'Balcony'), ('south', 'Playroom')]}, {'node': 'Balcony', 'node_moves': [('east', 'Closet')]}, {'node': 'Workshop', 'node_moves': [('west', 'Exercise room')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Playroom', 1)", "Second_Question_Answer": "('Exercise room', 1)", "Third_Question_Answer": "('Billiard room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(3, 1): 'Bathroom', (2, 1): 'Gallery', (2, 0): 'Exercise room', (1, 0): 'Playroom', (0, 0): 'Media room', (1, 1): 'Closet', (0, 1): 'Balcony', (3, 0): 'Workshop'}", "Strict": true}, {"game_id": 2, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Library', 'Sauna', 'Solarium', 'Study room', 'Exercise room', 'Workshop', 'Foyer', 'Attic']", "Graph_Edges": "[('Library', 'Sauna'), ('Sauna', 'Solarium'), ('Sauna', 'Study room'), ('Study room', 'Exercise room'), ('Exercise room', 'Workshop'), ('Workshop', 'Foyer'), ('Workshop', 'Attic')]", "Current_Position": "Attic", "Picture_Name": "graph_5799.png", "Directions": "[('Library', ['east']), ('Sauna', ['west', 'south', 'east']), ('Solarium', ['west']), ('Study room', ['west', 'north']), ('Exercise room', ['west', 'east']), ('Workshop', ['south', 'east', 'north']), ('Foyer', ['south']), ('Attic', ['north'])]", "Moves": "[{'node': 'Library', 'node_moves': [('east', 'Sauna')]}, {'node': 'Sauna', 'node_moves': [('west', 'Library'), ('south', 'Study room'), ('east', 'Solarium')]}, {'node': 'Sauna', 'node_moves': [('west', 'Library'), ('south', 'Study room'), ('east', 'Solarium')]}, {'node': 'Sauna', 'node_moves': [('west', 'Library'), ('south', 'Study room'), ('east', 'Solarium')]}, {'node': 'Solarium', 'node_moves': [('west', 'Sauna')]}, {'node': 'Study room', 'node_moves': [('west', 'Exercise room'), ('north', 'Sauna')]}, {'node': 'Study room', 'node_moves': [('west', 'Exercise room'), ('north', 'Sauna')]}, {'node': 'Exercise room', 'node_moves': [('west', 'Workshop'), ('east', 'Study room')]}, {'node': 'Exercise room', 'node_moves': [('west', 'Workshop'), ('east', 'Study room')]}, {'node': 'Workshop', 'node_moves': [('south', 'Attic'), ('east', 'Exercise room'), ('north', 'Foyer')]}, {'node': 'Workshop', 'node_moves': [('south', 'Attic'), ('east', 'Exercise room'), ('north', 'Foyer')]}, {'node': 'Workshop', 'node_moves': [('south', 'Attic'), ('east', 'Exercise room'), ('north', 'Foyer')]}, {'node': 'Foyer', 'node_moves': [('south', 'Workshop')]}, {'node': 'Attic', 'node_moves': [('north', 'Workshop')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Solarium', 1)", "Second_Question_Answer": "('Library', 1)", "Third_Question_Answer": "('Bedroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(1, 3): 'Library', (2, 3): 'Sauna', (3, 3): 'Solarium', (2, 2): 'Study room', (1, 2): 'Exercise room', (0, 2): 'Workshop', (0, 3): 'Foyer', (0, 1): 'Attic'}", "Strict": true}, {"game_id": 3, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Cellar', 'Balcony', 'Guest room', 'Library', 'Workshop', 'Dining room', 'Game room', 'Kitchen']", "Graph_Edges": "[('Cellar', 'Balcony'), ('Balcony', 'Guest room'), ('Guest room', 'Library'), ('Library', 'Workshop'), ('Workshop', 'Dining room'), ('Workshop', 'Game room'), ('Game room', 'Kitchen')]", "Current_Position": "Dining room", "Picture_Name": "graph_4464.png", "Directions": "[('Cellar', ['south']), ('Balcony', ['west', 'north']), ('Guest room', ['west', 'east']), ('Library', ['south', 'east']), ('Workshop', ['south', 'north', 'west']), ('Dining room', ['north']), ('Game room', ['east', 'north']), ('Kitchen', ['south'])]", "Moves": "[{'node': 'Cellar', 'node_moves': [('south', 'Balcony')]}, {'node': 'Balcony', 'node_moves': [('west', 'Guest room'), ('north', 'Cellar')]}, {'node': 'Balcony', 'node_moves': [('west', 'Guest room'), ('north', 'Cellar')]}, {'node': 'Guest room', 'node_moves': [('west', 'Library'), ('east', 'Balcony')]}, {'node': 'Guest room', 'node_moves': [('west', 'Library'), ('east', 'Balcony')]}, {'node': 'Library', 'node_moves': [('south', 'Workshop'), ('east', 'Guest room')]}, {'node': 'Library', 'node_moves': [('south', 'Workshop'), ('east', 'Guest room')]}, {'node': 'Workshop', 'node_moves': [('south', 'Dining room'), ('north', 'Library'), ('west', 'Game room')]}, {'node': 'Workshop', 'node_moves': [('south', 'Dining room'), ('north', 'Library'), ('west', 'Game room')]}, {'node': 'Workshop', 'node_moves': [('south', 'Dining room'), ('north', 'Library'), ('west', 'Game room')]}, {'node': 'Dining room', 'node_moves': [('north', 'Workshop')]}, {'node': 'Game room', 'node_moves': [('east', 'Workshop'), ('north', 'Kitchen')]}, {'node': 'Game room', 'node_moves': [('east', 'Workshop'), ('north', 'Kitchen')]}, {'node': 'Kitchen', 'node_moves': [('south', 'Game room')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Library', 1)", "Second_Question_Answer": "('Guest room', 1)", "Third_Question_Answer": "('Solarium', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(3, 3): 'Cellar', (3, 2): 'Balcony', (2, 2): 'Guest room', (1, 2): 'Library', (1, 1): 'Workshop', (1, 0): 'Dining room', (0, 1): 'Game room', (0, 2): 'Kitchen'}", "Strict": true}, {"game_id": 4, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Game room', 'Bathroom', 'Cellar', 'Workshop', 'Study room', 'Billiard room', 'Wine cellar', 'Bedroom']", "Graph_Edges": "[('Game room', 'Bathroom'), ('Game room', 'Cellar'), ('Cellar', 'Workshop'), ('Workshop', 'Study room'), ('Study room', 'Billiard room'), ('Billiard room', 'Wine cellar'), ('Wine cellar', 'Bedroom')]", "Current_Position": "Study room", "Picture_Name": "graph_8489.png", "Directions": "[('Game room', ['south', 'north']), ('Bathroom', ['south']), ('Cellar', ['south', 'north']), ('Workshop', ['west', 'north']), ('Study room', ['west', 'east']), ('Billiard room', ['east', 'north']), ('Wine cellar', ['south', 'north']), ('Bedroom', ['south'])]", "Moves": "[{'node': 'Game room', 'node_moves': [('south', 'Cellar'), ('north', 'Bathroom')]}, {'node': 'Game room', 'node_moves': [('south', 'Cellar'), ('north', 'Bathroom')]}, {'node': 'Bathroom', 'node_moves': [('south', 'Game room')]}, {'node': 'Cellar', 'node_moves': [('south', 'Workshop'), ('north', 'Game room')]}, {'node': 'Cellar', 'node_moves': [('south', 'Workshop'), ('north', 'Game room')]}, {'node': 'Workshop', 'node_moves': [('west', 'Study room'), ('north', 'Cellar')]}, {'node': 'Workshop', 'node_moves': [('west', 'Study room'), ('north', 'Cellar')]}, {'node': 'Study room', 'node_moves': [('west', 'Billiard room'), ('east', 'Workshop')]}, {'node': 'Study room', 'node_moves': [('west', 'Billiard room'), ('east', 'Workshop')]}, {'node': 'Billiard room', 'node_moves': [('east', 'Study room'), ('north', 'Wine cellar')]}, {'node': 'Billiard room', 'node_moves': [('east', 'Study room'), ('north', 'Wine cellar')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Billiard room'), ('north', 'Bedroom')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Billiard room'), ('north', 'Bedroom')]}, {'node': 'Bedroom', 'node_moves': [('south', 'Wine cellar')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Billiard room', 1)", "Second_Question_Answer": "('Cellar', 1)", "Third_Question_Answer": "('Craft room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(3, 2): 'Game room', (3, 3): 'Bathroom', (3, 1): 'Cellar', (3, 0): 'Workshop', (2, 0): 'Study room', (1, 0): 'Billiard room', (1, 1): 'Wine cellar', (1, 2): 'Bedroom'}", "Strict": true}, {"game_id": 5, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Gallery', 'Conservatory', 'Billiard room', 'Bar', 'Cellar', 'Kitchen', 'Pantry', 'Home theater']", "Graph_Edges": "[('Gallery', 'Conservatory'), ('Gallery', 'Bar'), ('Conservatory', 'Billiard room'), ('Billiard room', 'Cellar'), ('Cellar', 'Kitchen'), ('Kitchen', 'Pantry'), ('Pantry', 'Home theater')]", "Current_Position": "Gallery", "Picture_Name": "graph_7788.png", "Directions": "[('Gallery', ['south', 'east']), ('Conservatory', ['south', 'north']), ('Billiard room', ['south', 'north']), ('Bar', ['west']), ('Cellar', ['east', 'north']), ('Kitchen', ['west', 'north']), ('Pantry', ['south', 'north']), ('Home theater', ['south'])]", "Moves": "[{'node': 'Gallery', 'node_moves': [('south', 'Conservatory'), ('east', 'Bar')]}, {'node': 'Gallery', 'node_moves': [('south', 'Conservatory'), ('east', 'Bar')]}, {'node': 'Conservatory', 'node_moves': [('south', 'Billiard room'), ('north', 'Gallery')]}, {'node': 'Conservatory', 'node_moves': [('south', 'Billiard room'), ('north', 'Gallery')]}, {'node': 'Billiard room', 'node_moves': [('south', 'Cellar'), ('north', 'Conservatory')]}, {'node': 'Billiard room', 'node_moves': [('south', 'Cellar'), ('north', 'Conservatory')]}, {'node': 'Bar', 'node_moves': [('west', 'Gallery')]}, {'node': 'Cellar', 'node_moves': [('east', 'Kitchen'), ('north', 'Billiard room')]}, {'node': 'Cellar', 'node_moves': [('east', 'Kitchen'), ('north', 'Billiard room')]}, {'node': 'Kitchen', 'node_moves': [('west', 'Cellar'), ('north', 'Pantry')]}, {'node': 'Kitchen', 'node_moves': [('west', 'Cellar'), ('north', 'Pantry')]}, {'node': 'Pantry', 'node_moves': [('south', 'Kitchen'), ('north', 'Home theater')]}, {'node': 'Pantry', 'node_moves': [('south', 'Kitchen'), ('north', 'Home theater')]}, {'node': 'Home theater', 'node_moves': [('south', 'Pantry')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Bar', 1)", "Second_Question_Answer": "('Billiard room', 1)", "Third_Question_Answer": "('Studio', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 3): 'Gallery', (0, 2): 'Conservatory', (0, 1): 'Billiard room', (1, 3): 'Bar', (0, 0): 'Cellar', (1, 0): 'Kitchen', (1, 1): 'Pantry', (1, 2): 'Home theater'}", "Strict": true}, {"game_id": 6, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Nursery', 'Bedroom', 'Wine cellar', 'Utility room', 'Gallery', 'Workshop', 'Craft room', 'Home office']", "Graph_Edges": "[('Nursery', 'Bedroom'), ('Bedroom', 'Wine cellar'), ('Wine cellar', 'Utility room'), ('Wine cellar', 'Gallery'), ('Gallery', 'Workshop'), ('Workshop', 'Craft room'), ('Craft room', 'Home office')]", "Current_Position": "Home office", "Picture_Name": "graph_2113.png", "Directions": "[('Nursery', ['north']), ('Bedroom', ['west', 'south']), ('Wine cellar', ['south', 'north', 'east']), ('Utility room', ['north']), ('Gallery', ['south', 'east']), ('Workshop', ['west', 'east']), ('Craft room', ['west', 'south']), ('Home office', ['north'])]", "Moves": "[{'node': 'Nursery', 'node_moves': [('north', 'Bedroom')]}, {'node': 'Bedroom', 'node_moves': [('west', 'Wine cellar'), ('south', 'Nursery')]}, {'node': 'Bedroom', 'node_moves': [('west', 'Wine cellar'), ('south', 'Nursery')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Utility room'), ('north', 'Gallery'), ('east', 'Bedroom')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Utility room'), ('north', 'Gallery'), ('east', 'Bedroom')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Utility room'), ('north', 'Gallery'), ('east', 'Bedroom')]}, {'node': 'Utility room', 'node_moves': [('north', 'Wine cellar')]}, {'node': 'Gallery', 'node_moves': [('south', 'Wine cellar'), ('east', 'Workshop')]}, {'node': 'Gallery', 'node_moves': [('south', 'Wine cellar'), ('east', 'Workshop')]}, {'node': 'Workshop', 'node_moves': [('west', 'Gallery'), ('east', 'Craft room')]}, {'node': 'Workshop', 'node_moves': [('west', 'Gallery'), ('east', 'Craft room')]}, {'node': 'Craft room', 'node_moves': [('west', 'Workshop'), ('south', 'Home office')]}, {'node': 'Craft room', 'node_moves': [('west', 'Workshop'), ('south', 'Home office')]}, {'node': 'Home office', 'node_moves': [('north', 'Craft room')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Nursery', 1)", "Second_Question_Answer": "('Bedroom', 1)", "Third_Question_Answer": "('Foyer', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(1, 1): 'Nursery', (1, 2): 'Bedroom', (0, 2): 'Wine cellar', (0, 1): 'Utility room', (0, 3): 'Gallery', (1, 3): 'Workshop', (2, 3): 'Craft room', (2, 2): 'Home office'}", "Strict": true}, {"game_id": 7, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Mudroom', 'Foyer', 'Pantry', 'Guest room', 'Sauna', 'Media room', 'Gallery', 'Balcony']", "Graph_Edges": "[('Mudroom', 'Foyer'), ('Mudroom', 'Pantry'), ('Pantry', 'Guest room'), ('Pantry', 'Sauna'), ('Sauna', 'Media room'), ('Sauna', 'Balcony'), ('Media room', 'Gallery')]", "Current_Position": "Sauna", "Picture_Name": "graph_9399.png", "Directions": "[('Mudroom', ['south', 'east']), ('Foyer', ['north']), ('Pantry', ['west', 'south', 'north']), ('Guest room', ['north']), ('Sauna', ['west', 'south', 'north']), ('Media room', ['west', 'south']), ('Gallery', ['east']), ('Balcony', ['east'])]", "Moves": "[{'node': 'Mudroom', 'node_moves': [('south', 'Foyer'), ('east', 'Pantry')]}, {'node': 'Mudroom', 'node_moves': [('south', 'Foyer'), ('east', 'Pantry')]}, {'node': 'Foyer', 'node_moves': [('north', 'Mudroom')]}, {'node': 'Pantry', 'node_moves': [('west', 'Mudroom'), ('south', 'Guest room'), ('north', 'Sauna')]}, {'node': 'Pantry', 'node_moves': [('west', 'Mudroom'), ('south', 'Guest room'), ('north', 'Sauna')]}, {'node': 'Pantry', 'node_moves': [('west', 'Mudroom'), ('south', 'Guest room'), ('north', 'Sauna')]}, {'node': 'Guest room', 'node_moves': [('north', 'Pantry')]}, {'node': 'Sauna', 'node_moves': [('west', 'Balcony'), ('south', 'Pantry'), ('north', 'Media room')]}, {'node': 'Sauna', 'node_moves': [('west', 'Balcony'), ('south', 'Pantry'), ('north', 'Media room')]}, {'node': 'Sauna', 'node_moves': [('west', 'Balcony'), ('south', 'Pantry'), ('north', 'Media room')]}, {'node': 'Media room', 'node_moves': [('west', 'Gallery'), ('south', 'Sauna')]}, {'node': 'Media room', 'node_moves': [('west', 'Gallery'), ('south', 'Sauna')]}, {'node': 'Gallery', 'node_moves': [('east', 'Media room')]}, {'node': 'Balcony', 'node_moves': [('east', 'Sauna')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Guest room', 1)", "Second_Question_Answer": "('Mudroom', 1)", "Third_Question_Answer": "('Studio', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 1): 'Mudroom', (0, 0): 'Foyer', (1, 1): 'Pantry', (1, 0): 'Guest room', (1, 2): 'Sauna', (1, 3): 'Media room', (0, 3): 'Gallery', (0, 2): 'Balcony'}", "Strict": true}, {"game_id": 8, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Workshop', 'Living room', 'Basement', 'Wine cellar', 'Study room', 'Home theater', 'Gallery', 'Attic']", "Graph_Edges": "[('Workshop', 'Living room'), ('Workshop', 'Wine cellar'), ('Living room', 'Basement'), ('Wine cellar', 'Study room'), ('Study room', 'Home theater'), ('Home theater', 'Gallery'), ('Gallery', 'Attic')]", "Current_Position": "Workshop", "Picture_Name": "graph_2497.png", "Directions": "[('Workshop', ['south', 'north']), ('Living room', ['west', 'south']), ('Basement', ['east']), ('Wine cellar', ['south', 'north']), ('Study room', ['west', 'north']), ('Home theater', ['west', 'east']), ('Gallery', ['west', 'east']), ('Attic', ['east'])]", "Moves": "[{'node': 'Workshop', 'node_moves': [('south', 'Wine cellar'), ('north', 'Living room')]}, {'node': 'Workshop', 'node_moves': [('south', 'Wine cellar'), ('north', 'Living room')]}, {'node': 'Living room', 'node_moves': [('west', 'Basement'), ('south', 'Workshop')]}, {'node': 'Living room', 'node_moves': [('west', 'Basement'), ('south', 'Workshop')]}, {'node': 'Basement', 'node_moves': [('east', 'Living room')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Study room'), ('north', 'Workshop')]}, {'node': 'Wine cellar', 'node_moves': [('south', 'Study room'), ('north', 'Workshop')]}, {'node': 'Study room', 'node_moves': [('west', 'Home theater'), ('north', 'Wine cellar')]}, {'node': 'Study room', 'node_moves': [('west', 'Home theater'), ('north', 'Wine cellar')]}, {'node': 'Home theater', 'node_moves': [('west', 'Gallery'), ('east', 'Study room')]}, {'node': 'Home theater', 'node_moves': [('west', 'Gallery'), ('east', 'Study room')]}, {'node': 'Gallery', 'node_moves': [('west', 'Attic'), ('east', 'Home theater')]}, {'node': 'Gallery', 'node_moves': [('west', 'Attic'), ('east', 'Home theater')]}, {'node': 'Attic', 'node_moves': [('east', 'Gallery')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Basement', 1)", "Second_Question_Answer": "('Home theater', 1)", "Third_Question_Answer": "('Nursery', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(3, 2): 'Workshop', (3, 3): 'Living room', (2, 3): 'Basement', (3, 1): 'Wine cellar', (3, 0): 'Study room', (2, 0): 'Home theater', (1, 0): 'Gallery', (0, 0): 'Attic'}", "Strict": true}, {"game_id": 9, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Attic', 'Pantry', 'Garage', 'Foyer', 'Studio', 'Sauna', 'Library', 'Kitchen']", "Graph_Edges": "[('Attic', 'Pantry'), ('Pantry', 'Garage'), ('Garage', 'Foyer'), ('Garage', 'Studio'), ('Studio', 'Sauna'), ('Sauna', 'Library'), ('Library', 'Kitchen')]", "Current_Position": "Studio", "Picture_Name": "graph_1104.png", "Directions": "[('Attic', ['east']), ('Pantry', ['west', 'east']), ('Garage', ['south', 'west', 'east']), ('Foyer', ['west']), ('Studio', ['east', 'north']), ('Sauna', ['west', 'south']), ('Library', ['south', 'north']), ('Kitchen', ['north'])]", "Moves": "[{'node': 'Attic', 'node_moves': [('east', 'Pantry')]}, {'node': 'Pantry', 'node_moves': [('west', 'Attic'), ('east', 'Garage')]}, {'node': 'Pantry', 'node_moves': [('west', 'Attic'), ('east', 'Garage')]}, {'node': 'Garage', 'node_moves': [('south', 'Studio'), ('west', 'Pantry'), ('east', 'Foyer')]}, {'node': 'Garage', 'node_moves': [('south', 'Studio'), ('west', 'Pantry'), ('east', 'Foyer')]}, {'node': 'Garage', 'node_moves': [('south', 'Studio'), ('west', 'Pantry'), ('east', 'Foyer')]}, {'node': 'Foyer', 'node_moves': [('west', 'Garage')]}, {'node': 'Studio', 'node_moves': [('east', 'Sauna'), ('north', 'Garage')]}, {'node': 'Studio', 'node_moves': [('east', 'Sauna'), ('north', 'Garage')]}, {'node': 'Sauna', 'node_moves': [('west', 'Studio'), ('south', 'Library')]}, {'node': 'Sauna', 'node_moves': [('west', 'Studio'), ('south', 'Library')]}, {'node': 'Library', 'node_moves': [('south', 'Kitchen'), ('north', 'Sauna')]}, {'node': 'Library', 'node_moves': [('south', 'Kitchen'), ('north', 'Sauna')]}, {'node': 'Kitchen', 'node_moves': [('north', 'Library')]}]", "Cycle": "cycle_false", "Ambiguity": null, "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Garage', 1)", "Second_Question_Answer": "('Library', 1)", "Third_Question_Answer": "('Bathroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 3): 'Attic', (1, 3): 'Pantry', (2, 3): 'Garage', (3, 3): 'Foyer', (2, 2): 'Studio', (3, 2): 'Sauna', (3, 1): 'Library', (3, 0): 'Kitchen'}", "Strict": true}]}, {"name": "limited", "game_instances": [{"game_id": 10, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Dining room_(3, 1)', 'Mudroom_(3, 2)', 'Basement_(2, 2)', 'Dining room_(2, 1)', 'Pantry_(3, 3)', 'Gallery_(2, 3)', 'Nursery_(1, 3)', 'Home office_(1, 2)']", "Graph_Edges": "[('Dining room_(3, 1)', 'Mudroom_(3, 2)'), ('Mudroom_(3, 2)', 'Basement_(2, 2)'), ('Mudroom_(3, 2)', 'Pantry_(3, 3)'), ('Basement_(2, 2)', 'Dining room_(2, 1)'), ('Pantry_(3, 3)', 'Gallery_(2, 3)'), ('Gallery_(2, 3)', 'Nursery_(1, 3)'), ('Nursery_(1, 3)', 'Home office_(1, 2)')]", "Current_Position": "Pantry_(3, 3)", "Picture_Name": "graph_1365.png", "Directions": "[('Dining room_(3, 1)', ['north']), ('Mudroom_(3, 2)', ['west', 'south', 'north']), ('Basement_(2, 2)', ['south', 'east']), ('Dining room_(2, 1)', ['north']), ('Pantry_(3, 3)', ['west', 'south']), ('Gallery_(2, 3)', ['west', 'east']), ('Nursery_(1, 3)', ['south', 'east']), ('Home office_(1, 2)', ['north'])]", "Moves": "[{'node': 'Dining room_(3, 1)', 'node_moves': [('north', 'Mudroom_(3, 2)')]}, {'node': 'Mudroom_(3, 2)', 'node_moves': [('west', 'Basement_(2, 2)'), ('south', 'Dining room_(3, 1)'), ('north', 'Pantry_(3, 3)')]}, {'node': 'Mudroom_(3, 2)', 'node_moves': [('west', 'Basement_(2, 2)'), ('south', 'Dining room_(3, 1)'), ('north', 'Pantry_(3, 3)')]}, {'node': 'Mudroom_(3, 2)', 'node_moves': [('west', 'Basement_(2, 2)'), ('south', 'Dining room_(3, 1)'), ('north', 'Pantry_(3, 3)')]}, {'node': 'Basement_(2, 2)', 'node_moves': [('south', 'Dining room_(2, 1)'), ('east', 'Mudroom_(3, 2)')]}, {'node': 'Basement_(2, 2)', 'node_moves': [('south', 'Dining room_(2, 1)'), ('east', 'Mudroom_(3, 2)')]}, {'node': 'Dining room_(2, 1)', 'node_moves': [('north', 'Basement_(2, 2)')]}, {'node': 'Pantry_(3, 3)', 'node_moves': [('west', 'Gallery_(2, 3)'), ('south', 'Mudroom_(3, 2)')]}, {'node': 'Pantry_(3, 3)', 'node_moves': [('west', 'Gallery_(2, 3)'), ('south', 'Mudroom_(3, 2)')]}, {'node': 'Gallery_(2, 3)', 'node_moves': [('west', 'Nursery_(1, 3)'), ('east', 'Pantry_(3, 3)')]}, {'node': 'Gallery_(2, 3)', 'node_moves': [('west', 'Nursery_(1, 3)'), ('east', 'Pantry_(3, 3)')]}, {'node': 'Nursery_(1, 3)', 'node_moves': [('south', 'Home office_(1, 2)'), ('east', 'Gallery_(2, 3)')]}, {'node': 'Nursery_(1, 3)', 'node_moves': [('south', 'Home office_(1, 2)'), ('east', 'Gallery_(2, 3)')]}, {'node': 'Home office_(1, 2)', 'node_moves': [('north', 'Nursery_(1, 3)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Dining room', 2)", "Second_Question_Answer": "('Basement', 1)", "Third_Question_Answer": "('Workshop', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(3, 1): 'Dining room', (2, 1): 'Dining room', (3, 2): 'Mudroom', (2, 2): 'Basement', (3, 3): 'Pantry', (2, 3): 'Gallery', (1, 3): 'Nursery', (1, 2): 'Home office'}", "Strict": true}, {"game_id": 11, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Playroom_(1, 1)', 'Utility room_(0, 1)', 'Dining room_(1, 0)', 'Attic_(0, 2)', 'Playroom_(1, 2)', 'Study room_(1, 3)', 'Laundry room_(2, 2)', 'Foyer_(2, 3)']", "Graph_Edges": "[('Playroom_(1, 1)', 'Utility room_(0, 1)'), ('Playroom_(1, 1)', 'Dining room_(1, 0)'), ('Utility room_(0, 1)', 'Attic_(0, 2)'), ('Attic_(0, 2)', 'Playroom_(1, 2)'), ('Playroom_(1, 2)', 'Study room_(1, 3)'), ('Playroom_(1, 2)', 'Laundry room_(2, 2)'), ('Laundry room_(2, 2)', 'Foyer_(2, 3)')]", "Current_Position": "Playroom_(1, 2)", "Picture_Name": "graph_4681.png", "Directions": "[('Playroom_(1, 1)', ['west', 'south']), ('Utility room_(0, 1)', ['east', 'north']), ('Dining room_(1, 0)', ['north']), ('Attic_(0, 2)', ['south', 'east']), ('Playroom_(1, 2)', ['west', 'east', 'north']), ('Study room_(1, 3)', ['south']), ('Laundry room_(2, 2)', ['west', 'north']), ('Foyer_(2, 3)', ['south'])]", "Moves": "[{'node': 'Playroom_(1, 1)', 'node_moves': [('west', 'Utility room_(0, 1)'), ('south', 'Dining room_(1, 0)')]}, {'node': 'Playroom_(1, 1)', 'node_moves': [('west', 'Utility room_(0, 1)'), ('south', 'Dining room_(1, 0)')]}, {'node': 'Utility room_(0, 1)', 'node_moves': [('east', 'Playroom_(1, 1)'), ('north', 'Attic_(0, 2)')]}, {'node': 'Utility room_(0, 1)', 'node_moves': [('east', 'Playroom_(1, 1)'), ('north', 'Attic_(0, 2)')]}, {'node': 'Dining room_(1, 0)', 'node_moves': [('north', 'Playroom_(1, 1)')]}, {'node': 'Attic_(0, 2)', 'node_moves': [('south', 'Utility room_(0, 1)'), ('east', 'Playroom_(1, 2)')]}, {'node': 'Attic_(0, 2)', 'node_moves': [('south', 'Utility room_(0, 1)'), ('east', 'Playroom_(1, 2)')]}, {'node': 'Playroom_(1, 2)', 'node_moves': [('west', 'Attic_(0, 2)'), ('east', 'Laundry room_(2, 2)'), ('north', 'Study room_(1, 3)')]}, {'node': 'Playroom_(1, 2)', 'node_moves': [('west', 'Attic_(0, 2)'), ('east', 'Laundry room_(2, 2)'), ('north', 'Study room_(1, 3)')]}, {'node': 'Playroom_(1, 2)', 'node_moves': [('west', 'Attic_(0, 2)'), ('east', 'Laundry room_(2, 2)'), ('north', 'Study room_(1, 3)')]}, {'node': 'Study room_(1, 3)', 'node_moves': [('south', 'Playroom_(1, 2)')]}, {'node': 'Laundry room_(2, 2)', 'node_moves': [('west', 'Playroom_(1, 2)'), ('north', 'Foyer_(2, 3)')]}, {'node': 'Laundry room_(2, 2)', 'node_moves': [('west', 'Playroom_(1, 2)'), ('north', 'Foyer_(2, 3)')]}, {'node': 'Foyer_(2, 3)', 'node_moves': [('south', 'Laundry room_(2, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Playroom', 2)", "Second_Question_Answer": "('Laundry room', 1)", "Third_Question_Answer": "('Mudroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(1, 1): 'Playroom', (1, 2): 'Playroom', (0, 1): 'Utility room', (1, 0): 'Dining room', (0, 2): 'Attic', (1, 3): 'Study room', (2, 2): 'Laundry room', (2, 3): 'Foyer'}", "Strict": true}, {"game_id": 12, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Basement_(0, 0)', 'Living room_(0, 1)', 'Wine cellar_(1, 0)', 'Pantry_(0, 2)', 'Exercise room_(2, 0)', 'Exercise room_(3, 0)', 'Gallery_(2, 1)', 'Gallery_(1, 1)']", "Graph_Edges": "[('Basement_(0, 0)', 'Living room_(0, 1)'), ('Basement_(0, 0)', 'Wine cellar_(1, 0)'), ('Living room_(0, 1)', 'Pantry_(0, 2)'), ('Wine cellar_(1, 0)', 'Exercise room_(2, 0)'), ('Exercise room_(2, 0)', 'Exercise room_(3, 0)'), ('Exercise room_(2, 0)', 'Gallery_(2, 1)'), ('Gallery_(2, 1)', 'Gallery_(1, 1)')]", "Current_Position": "Gallery_(2, 1)", "Picture_Name": "graph_358.png", "Directions": "[('Basement_(0, 0)', ['east', 'north']), ('Living room_(0, 1)', ['south', 'north']), ('Wine cellar_(1, 0)', ['west', 'east']), ('Pantry_(0, 2)', ['south']), ('Exercise room_(2, 0)', ['west', 'east', 'north']), ('Exercise room_(3, 0)', ['west']), ('Gallery_(2, 1)', ['west', 'south']), ('Gallery_(1, 1)', ['east'])]", "Moves": "[{'node': 'Basement_(0, 0)', 'node_moves': [('east', 'Wine cellar_(1, 0)'), ('north', 'Living room_(0, 1)')]}, {'node': 'Basement_(0, 0)', 'node_moves': [('east', 'Wine cellar_(1, 0)'), ('north', 'Living room_(0, 1)')]}, {'node': 'Living room_(0, 1)', 'node_moves': [('south', 'Basement_(0, 0)'), ('north', 'Pantry_(0, 2)')]}, {'node': 'Living room_(0, 1)', 'node_moves': [('south', 'Basement_(0, 0)'), ('north', 'Pantry_(0, 2)')]}, {'node': 'Wine cellar_(1, 0)', 'node_moves': [('west', 'Basement_(0, 0)'), ('east', 'Exercise room_(2, 0)')]}, {'node': 'Wine cellar_(1, 0)', 'node_moves': [('west', 'Basement_(0, 0)'), ('east', 'Exercise room_(2, 0)')]}, {'node': 'Pantry_(0, 2)', 'node_moves': [('south', 'Living room_(0, 1)')]}, {'node': 'Exercise room_(2, 0)', 'node_moves': [('west', 'Wine cellar_(1, 0)'), ('east', 'Exercise room_(3, 0)'), ('north', 'Gallery_(2, 1)')]}, {'node': 'Exercise room_(2, 0)', 'node_moves': [('west', 'Wine cellar_(1, 0)'), ('east', 'Exercise room_(3, 0)'), ('north', 'Gallery_(2, 1)')]}, {'node': 'Exercise room_(2, 0)', 'node_moves': [('west', 'Wine cellar_(1, 0)'), ('east', 'Exercise room_(3, 0)'), ('north', 'Gallery_(2, 1)')]}, {'node': 'Exercise room_(3, 0)', 'node_moves': [('west', 'Exercise room_(2, 0)')]}, {'node': 'Gallery_(2, 1)', 'node_moves': [('west', 'Gallery_(1, 1)'), ('south', 'Exercise room_(2, 0)')]}, {'node': 'Gallery_(2, 1)', 'node_moves': [('west', 'Gallery_(1, 1)'), ('south', 'Exercise room_(2, 0)')]}, {'node': 'Gallery_(1, 1)', 'node_moves': [('east', 'Gallery_(2, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Exercise room', 2)", "Second_Question_Answer": "('Gallery', 2)", "Third_Question_Answer": "('Media room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 1): 'Gallery', (1, 1): 'Gallery', (2, 0): 'Exercise room', (3, 0): 'Exercise room', (0, 0): 'Basement', (0, 1): 'Living room', (1, 0): 'Wine cellar', (0, 2): 'Pantry'}", "Strict": true}, {"game_id": 13, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Conservatory_(3, 3)', 'Study room_(2, 3)', 'Study room_(2, 2)', 'Pantry_(1, 2)', 'Media room_(1, 1)', 'Home theater_(1, 0)', 'Foyer_(2, 1)', 'Wine cellar_(0, 0)']", "Graph_Edges": "[('Conservatory_(3, 3)', 'Study room_(2, 3)'), ('Study room_(2, 3)', 'Study room_(2, 2)'), ('Study room_(2, 2)', 'Pantry_(1, 2)'), ('Pantry_(1, 2)', 'Media room_(1, 1)'), ('Media room_(1, 1)', 'Home theater_(1, 0)'), ('Media room_(1, 1)', 'Foyer_(2, 1)'), ('Home theater_(1, 0)', 'Wine cellar_(0, 0)')]", "Current_Position": "Conservatory_(3, 3)", "Picture_Name": "graph_4080.png", "Directions": "[('Conservatory_(3, 3)', ['west']), ('Study room_(2, 3)', ['south', 'east']), ('Study room_(2, 2)', ['west', 'north']), ('Pantry_(1, 2)', ['south', 'east']), ('Media room_(1, 1)', ['south', 'north', 'east']), ('Home theater_(1, 0)', ['west', 'north']), ('Foyer_(2, 1)', ['west']), ('Wine cellar_(0, 0)', ['east'])]", "Moves": "[{'node': 'Conservatory_(3, 3)', 'node_moves': [('west', 'Study room_(2, 3)')]}, {'node': 'Study room_(2, 3)', 'node_moves': [('south', 'Study room_(2, 2)'), ('east', 'Conservatory_(3, 3)')]}, {'node': 'Study room_(2, 3)', 'node_moves': [('south', 'Study room_(2, 2)'), ('east', 'Conservatory_(3, 3)')]}, {'node': 'Study room_(2, 2)', 'node_moves': [('west', 'Pantry_(1, 2)'), ('north', 'Study room_(2, 3)')]}, {'node': 'Study room_(2, 2)', 'node_moves': [('west', 'Pantry_(1, 2)'), ('north', 'Study room_(2, 3)')]}, {'node': 'Pantry_(1, 2)', 'node_moves': [('south', 'Media room_(1, 1)'), ('east', 'Study room_(2, 2)')]}, {'node': 'Pantry_(1, 2)', 'node_moves': [('south', 'Media room_(1, 1)'), ('east', 'Study room_(2, 2)')]}, {'node': 'Media room_(1, 1)', 'node_moves': [('south', 'Home theater_(1, 0)'), ('north', 'Pantry_(1, 2)'), ('east', 'Foyer_(2, 1)')]}, {'node': 'Media room_(1, 1)', 'node_moves': [('south', 'Home theater_(1, 0)'), ('north', 'Pantry_(1, 2)'), ('east', 'Foyer_(2, 1)')]}, {'node': 'Media room_(1, 1)', 'node_moves': [('south', 'Home theater_(1, 0)'), ('north', 'Pantry_(1, 2)'), ('east', 'Foyer_(2, 1)')]}, {'node': 'Home theater_(1, 0)', 'node_moves': [('west', 'Wine cellar_(0, 0)'), ('north', 'Media room_(1, 1)')]}, {'node': 'Home theater_(1, 0)', 'node_moves': [('west', 'Wine cellar_(0, 0)'), ('north', 'Media room_(1, 1)')]}, {'node': 'Foyer_(2, 1)', 'node_moves': [('west', 'Media room_(1, 1)')]}, {'node': 'Wine cellar_(0, 0)', 'node_moves': [('east', 'Home theater_(1, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Study room', 2)", "Second_Question_Answer": "('Home theater', 1)", "Third_Question_Answer": "('Workshop', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 3): 'Study room', (2, 2): 'Study room', (3, 3): 'Conservatory', (1, 2): 'Pantry', (1, 1): 'Media room', (1, 0): 'Home theater', (2, 1): 'Foyer', (0, 0): 'Wine cellar'}", "Strict": true}, {"game_id": 14, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Basement_(1, 2)', 'Pantry_(0, 2)', 'Solarium_(0, 3)', 'Solarium_(0, 1)', 'Recreation room_(1, 1)', 'Attic_(2, 1)', 'Music room_(2, 0)', 'Basement_(3, 0)']", "Graph_Edges": "[('Basement_(1, 2)', 'Pantry_(0, 2)'), ('Pantry_(0, 2)', 'Solarium_(0, 3)'), ('Pantry_(0, 2)', 'Solarium_(0, 1)'), ('Solarium_(0, 1)', 'Recreation room_(1, 1)'), ('Recreation room_(1, 1)', 'Attic_(2, 1)'), ('Attic_(2, 1)', 'Music room_(2, 0)'), ('Music room_(2, 0)', 'Basement_(3, 0)')]", "Current_Position": "Attic_(2, 1)", "Picture_Name": "graph_5865.png", "Directions": "[('Basement_(1, 2)', ['west']), ('Pantry_(0, 2)', ['south', 'east', 'north']), ('Solarium_(0, 3)', ['south']), ('Solarium_(0, 1)', ['east', 'north']), ('Recreation room_(1, 1)', ['west', 'east']), ('Attic_(2, 1)', ['west', 'south']), ('Music room_(2, 0)', ['east', 'north']), ('Basement_(3, 0)', ['west'])]", "Moves": "[{'node': 'Basement_(1, 2)', 'node_moves': [('west', 'Pantry_(0, 2)')]}, {'node': 'Pantry_(0, 2)', 'node_moves': [('south', 'Solarium_(0, 1)'), ('east', 'Basement_(1, 2)'), ('north', 'Solarium_(0, 3)')]}, {'node': 'Pantry_(0, 2)', 'node_moves': [('south', 'Solarium_(0, 1)'), ('east', 'Basement_(1, 2)'), ('north', 'Solarium_(0, 3)')]}, {'node': 'Pantry_(0, 2)', 'node_moves': [('south', 'Solarium_(0, 1)'), ('east', 'Basement_(1, 2)'), ('north', 'Solarium_(0, 3)')]}, {'node': 'Solarium_(0, 3)', 'node_moves': [('south', 'Pantry_(0, 2)')]}, {'node': 'Solarium_(0, 1)', 'node_moves': [('east', 'Recreation room_(1, 1)'), ('north', 'Pantry_(0, 2)')]}, {'node': 'Solarium_(0, 1)', 'node_moves': [('east', 'Recreation room_(1, 1)'), ('north', 'Pantry_(0, 2)')]}, {'node': 'Recreation room_(1, 1)', 'node_moves': [('west', 'Solarium_(0, 1)'), ('east', 'Attic_(2, 1)')]}, {'node': 'Recreation room_(1, 1)', 'node_moves': [('west', 'Solarium_(0, 1)'), ('east', 'Attic_(2, 1)')]}, {'node': 'Attic_(2, 1)', 'node_moves': [('west', 'Recreation room_(1, 1)'), ('south', 'Music room_(2, 0)')]}, {'node': 'Attic_(2, 1)', 'node_moves': [('west', 'Recreation room_(1, 1)'), ('south', 'Music room_(2, 0)')]}, {'node': 'Music room_(2, 0)', 'node_moves': [('east', 'Basement_(3, 0)'), ('north', 'Attic_(2, 1)')]}, {'node': 'Music room_(2, 0)', 'node_moves': [('east', 'Basement_(3, 0)'), ('north', 'Attic_(2, 1)')]}, {'node': 'Basement_(3, 0)', 'node_moves': [('west', 'Music room_(2, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Solarium', 2)", "Second_Question_Answer": "('Basement', 2)", "Third_Question_Answer": "('Billiard room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(1, 2): 'Basement', (3, 0): 'Basement', (0, 1): 'Solarium', (0, 3): 'Solarium', (0, 2): 'Pantry', (1, 1): 'Recreation room', (2, 1): 'Attic', (2, 0): 'Music room'}", "Strict": true}, {"game_id": 15, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Laundry room_(1, 3)', 'Sauna_(0, 3)', 'Laundry room_(1, 2)', 'Music room_(2, 2)', 'Balcony_(2, 1)', 'Gallery_(2, 0)', 'Living room_(3, 1)', 'Bedroom_(3, 0)']", "Graph_Edges": "[('Laundry room_(1, 3)', 'Sauna_(0, 3)'), ('Laundry room_(1, 3)', 'Laundry room_(1, 2)'), ('Laundry room_(1, 2)', 'Music room_(2, 2)'), ('Music room_(2, 2)', 'Balcony_(2, 1)'), ('Balcony_(2, 1)', 'Gallery_(2, 0)'), ('Balcony_(2, 1)', 'Living room_(3, 1)'), ('Living room_(3, 1)', 'Bedroom_(3, 0)')]", "Current_Position": "Gallery_(2, 0)", "Picture_Name": "graph_519.png", "Directions": "[('Laundry room_(1, 3)', ['west', 'south']), ('Sauna_(0, 3)', ['east']), ('Laundry room_(1, 2)', ['east', 'north']), ('Music room_(2, 2)', ['west', 'south']), ('Balcony_(2, 1)', ['south', 'east', 'north']), ('Gallery_(2, 0)', ['north']), ('Living room_(3, 1)', ['west', 'south']), ('Bedroom_(3, 0)', ['north'])]", "Moves": "[{'node': 'Laundry room_(1, 3)', 'node_moves': [('west', 'Sauna_(0, 3)'), ('south', 'Laundry room_(1, 2)')]}, {'node': 'Laundry room_(1, 3)', 'node_moves': [('west', 'Sauna_(0, 3)'), ('south', 'Laundry room_(1, 2)')]}, {'node': 'Sauna_(0, 3)', 'node_moves': [('east', 'Laundry room_(1, 3)')]}, {'node': 'Laundry room_(1, 2)', 'node_moves': [('east', 'Music room_(2, 2)'), ('north', 'Laundry room_(1, 3)')]}, {'node': 'Laundry room_(1, 2)', 'node_moves': [('east', 'Music room_(2, 2)'), ('north', 'Laundry room_(1, 3)')]}, {'node': 'Music room_(2, 2)', 'node_moves': [('west', 'Laundry room_(1, 2)'), ('south', 'Balcony_(2, 1)')]}, {'node': 'Music room_(2, 2)', 'node_moves': [('west', 'Laundry room_(1, 2)'), ('south', 'Balcony_(2, 1)')]}, {'node': 'Balcony_(2, 1)', 'node_moves': [('south', 'Gallery_(2, 0)'), ('east', 'Living room_(3, 1)'), ('north', 'Music room_(2, 2)')]}, {'node': 'Balcony_(2, 1)', 'node_moves': [('south', 'Gallery_(2, 0)'), ('east', 'Living room_(3, 1)'), ('north', 'Music room_(2, 2)')]}, {'node': 'Balcony_(2, 1)', 'node_moves': [('south', 'Gallery_(2, 0)'), ('east', 'Living room_(3, 1)'), ('north', 'Music room_(2, 2)')]}, {'node': 'Gallery_(2, 0)', 'node_moves': [('north', 'Balcony_(2, 1)')]}, {'node': 'Living room_(3, 1)', 'node_moves': [('west', 'Balcony_(2, 1)'), ('south', 'Bedroom_(3, 0)')]}, {'node': 'Living room_(3, 1)', 'node_moves': [('west', 'Balcony_(2, 1)'), ('south', 'Bedroom_(3, 0)')]}, {'node': 'Bedroom_(3, 0)', 'node_moves': [('north', 'Living room_(3, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Laundry room', 2)", "Second_Question_Answer": "('Bedroom', 1)", "Third_Question_Answer": "('Garage', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(1, 2): 'Laundry room', (1, 3): 'Laundry room', (0, 3): 'Sauna', (2, 2): 'Music room', (2, 1): 'Balcony', (2, 0): 'Gallery', (3, 1): 'Living room', (3, 0): 'Bedroom'}", "Strict": true}, {"game_id": 16, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Game room_(3, 2)', 'Solarium_(3, 3)', 'Sauna_(2, 2)', 'Bathroom_(1, 2)', 'Billiard room_(0, 2)', 'Game room_(0, 3)', 'Sauna_(0, 1)', 'Balcony_(1, 1)']", "Graph_Edges": "[('Game room_(3, 2)', 'Solarium_(3, 3)'), ('Game room_(3, 2)', 'Sauna_(2, 2)'), ('Sauna_(2, 2)', 'Bathroom_(1, 2)'), ('Bathroom_(1, 2)', 'Billiard room_(0, 2)'), ('Billiard room_(0, 2)', 'Game room_(0, 3)'), ('Billiard room_(0, 2)', 'Sauna_(0, 1)'), ('Sauna_(0, 1)', 'Balcony_(1, 1)')]", "Current_Position": "Sauna_(0, 1)", "Picture_Name": "graph_6653.png", "Directions": "[('Game room_(3, 2)', ['west', 'north']), ('Solarium_(3, 3)', ['south']), ('Sauna_(2, 2)', ['west', 'east']), ('Bathroom_(1, 2)', ['west', 'east']), ('Billiard room_(0, 2)', ['south', 'east', 'north']), ('Game room_(0, 3)', ['south']), ('Sauna_(0, 1)', ['east', 'north']), ('Balcony_(1, 1)', ['west'])]", "Moves": "[{'node': 'Game room_(3, 2)', 'node_moves': [('west', 'Sauna_(2, 2)'), ('north', 'Solarium_(3, 3)')]}, {'node': 'Game room_(3, 2)', 'node_moves': [('west', 'Sauna_(2, 2)'), ('north', 'Solarium_(3, 3)')]}, {'node': 'Solarium_(3, 3)', 'node_moves': [('south', 'Game room_(3, 2)')]}, {'node': 'Sauna_(2, 2)', 'node_moves': [('west', 'Bathroom_(1, 2)'), ('east', 'Game room_(3, 2)')]}, {'node': 'Sauna_(2, 2)', 'node_moves': [('west', 'Bathroom_(1, 2)'), ('east', 'Game room_(3, 2)')]}, {'node': 'Bathroom_(1, 2)', 'node_moves': [('west', 'Billiard room_(0, 2)'), ('east', 'Sauna_(2, 2)')]}, {'node': 'Bathroom_(1, 2)', 'node_moves': [('west', 'Billiard room_(0, 2)'), ('east', 'Sauna_(2, 2)')]}, {'node': 'Billiard room_(0, 2)', 'node_moves': [('south', 'Sauna_(0, 1)'), ('east', 'Bathroom_(1, 2)'), ('north', 'Game room_(0, 3)')]}, {'node': 'Billiard room_(0, 2)', 'node_moves': [('south', 'Sauna_(0, 1)'), ('east', 'Bathroom_(1, 2)'), ('north', 'Game room_(0, 3)')]}, {'node': 'Billiard room_(0, 2)', 'node_moves': [('south', 'Sauna_(0, 1)'), ('east', 'Bathroom_(1, 2)'), ('north', 'Game room_(0, 3)')]}, {'node': 'Game room_(0, 3)', 'node_moves': [('south', 'Billiard room_(0, 2)')]}, {'node': 'Sauna_(0, 1)', 'node_moves': [('east', 'Balcony_(1, 1)'), ('north', 'Billiard room_(0, 2)')]}, {'node': 'Sauna_(0, 1)', 'node_moves': [('east', 'Balcony_(1, 1)'), ('north', 'Billiard room_(0, 2)')]}, {'node': 'Balcony_(1, 1)', 'node_moves': [('west', 'Sauna_(0, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Sauna', 2)", "Second_Question_Answer": "('Game room', 2)", "Third_Question_Answer": "('Workshop', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 3): 'Game room', (3, 2): 'Game room', (0, 1): 'Sauna', (2, 2): 'Sauna', (3, 3): 'Solarium', (1, 2): 'Bathroom', (0, 2): 'Billiard room', (1, 1): 'Balcony'}", "Strict": true}, {"game_id": 17, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Living room_(1, 0)', 'Laundry room_(0, 0)', 'Attic_(2, 0)', 'Craft room_(3, 0)', 'Sauna_(2, 1)', 'Craft room_(2, 2)', 'Bedroom_(3, 2)', 'Study room_(3, 3)']", "Graph_Edges": "[('Living room_(1, 0)', 'Laundry room_(0, 0)'), ('Living room_(1, 0)', 'Attic_(2, 0)'), ('Attic_(2, 0)', 'Craft room_(3, 0)'), ('Attic_(2, 0)', 'Sauna_(2, 1)'), ('Sauna_(2, 1)', 'Craft room_(2, 2)'), ('Craft room_(2, 2)', 'Bedroom_(3, 2)'), ('Bedroom_(3, 2)', 'Study room_(3, 3)')]", "Current_Position": "Study room_(3, 3)", "Picture_Name": "graph_769.png", "Directions": "[('Living room_(1, 0)', ['west', 'east']), ('Laundry room_(0, 0)', ['east']), ('Attic_(2, 0)', ['west', 'east', 'north']), ('Craft room_(3, 0)', ['west']), ('Sauna_(2, 1)', ['south', 'north']), ('Craft room_(2, 2)', ['south', 'east']), ('Bedroom_(3, 2)', ['west', 'north']), ('Study room_(3, 3)', ['south'])]", "Moves": "[{'node': 'Living room_(1, 0)', 'node_moves': [('west', 'Laundry room_(0, 0)'), ('east', 'Attic_(2, 0)')]}, {'node': 'Living room_(1, 0)', 'node_moves': [('west', 'Laundry room_(0, 0)'), ('east', 'Attic_(2, 0)')]}, {'node': 'Laundry room_(0, 0)', 'node_moves': [('east', 'Living room_(1, 0)')]}, {'node': 'Attic_(2, 0)', 'node_moves': [('west', 'Living room_(1, 0)'), ('east', 'Craft room_(3, 0)'), ('north', 'Sauna_(2, 1)')]}, {'node': 'Attic_(2, 0)', 'node_moves': [('west', 'Living room_(1, 0)'), ('east', 'Craft room_(3, 0)'), ('north', 'Sauna_(2, 1)')]}, {'node': 'Attic_(2, 0)', 'node_moves': [('west', 'Living room_(1, 0)'), ('east', 'Craft room_(3, 0)'), ('north', 'Sauna_(2, 1)')]}, {'node': 'Craft room_(3, 0)', 'node_moves': [('west', 'Attic_(2, 0)')]}, {'node': 'Sauna_(2, 1)', 'node_moves': [('south', 'Attic_(2, 0)'), ('north', 'Craft room_(2, 2)')]}, {'node': 'Sauna_(2, 1)', 'node_moves': [('south', 'Attic_(2, 0)'), ('north', 'Craft room_(2, 2)')]}, {'node': 'Craft room_(2, 2)', 'node_moves': [('south', 'Sauna_(2, 1)'), ('east', 'Bedroom_(3, 2)')]}, {'node': 'Craft room_(2, 2)', 'node_moves': [('south', 'Sauna_(2, 1)'), ('east', 'Bedroom_(3, 2)')]}, {'node': 'Bedroom_(3, 2)', 'node_moves': [('west', 'Craft room_(2, 2)'), ('north', 'Study room_(3, 3)')]}, {'node': 'Bedroom_(3, 2)', 'node_moves': [('west', 'Craft room_(2, 2)'), ('north', 'Study room_(3, 3)')]}, {'node': 'Study room_(3, 3)', 'node_moves': [('south', 'Bedroom_(3, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Craft room', 2)", "Second_Question_Answer": "('Laundry room', 1)", "Third_Question_Answer": "('Cellar', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 2): 'Craft room', (3, 0): 'Craft room', (1, 0): 'Living room', (0, 0): 'Laundry room', (2, 0): 'Attic', (2, 1): 'Sauna', (3, 2): 'Bedroom', (3, 3): 'Study room'}", "Strict": true}, {"game_id": 18, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Playroom_(1, 1)', 'Bathroom_(2, 1)', 'Bathroom_(2, 2)', 'Kitchen_(1, 2)', 'Bar_(1, 3)', 'Home gym_(0, 3)', 'Bedroom_(0, 2)', 'Playroom_(2, 3)']", "Graph_Edges": "[('Playroom_(1, 1)', 'Bathroom_(2, 1)'), ('Bathroom_(2, 1)', 'Bathroom_(2, 2)'), ('Bathroom_(2, 2)', 'Kitchen_(1, 2)'), ('Kitchen_(1, 2)', 'Bar_(1, 3)'), ('Bar_(1, 3)', 'Home gym_(0, 3)'), ('Bar_(1, 3)', 'Playroom_(2, 3)'), ('Home gym_(0, 3)', 'Bedroom_(0, 2)')]", "Current_Position": "Kitchen_(1, 2)", "Picture_Name": "graph_2971.png", "Directions": "[('Playroom_(1, 1)', ['east']), ('Bathroom_(2, 1)', ['west', 'north']), ('Bathroom_(2, 2)', ['west', 'south']), ('Kitchen_(1, 2)', ['east', 'north']), ('Bar_(1, 3)', ['south', 'west', 'east']), ('Home gym_(0, 3)', ['south', 'east']), ('Bedroom_(0, 2)', ['north']), ('Playroom_(2, 3)', ['west'])]", "Moves": "[{'node': 'Playroom_(1, 1)', 'node_moves': [('east', 'Bathroom_(2, 1)')]}, {'node': 'Bathroom_(2, 1)', 'node_moves': [('west', 'Playroom_(1, 1)'), ('north', 'Bathroom_(2, 2)')]}, {'node': 'Bathroom_(2, 1)', 'node_moves': [('west', 'Playroom_(1, 1)'), ('north', 'Bathroom_(2, 2)')]}, {'node': 'Bathroom_(2, 2)', 'node_moves': [('west', 'Kitchen_(1, 2)'), ('south', 'Bathroom_(2, 1)')]}, {'node': 'Bathroom_(2, 2)', 'node_moves': [('west', 'Kitchen_(1, 2)'), ('south', 'Bathroom_(2, 1)')]}, {'node': 'Kitchen_(1, 2)', 'node_moves': [('east', 'Bathroom_(2, 2)'), ('north', 'Bar_(1, 3)')]}, {'node': 'Kitchen_(1, 2)', 'node_moves': [('east', 'Bathroom_(2, 2)'), ('north', 'Bar_(1, 3)')]}, {'node': 'Bar_(1, 3)', 'node_moves': [('south', 'Kitchen_(1, 2)'), ('west', 'Home gym_(0, 3)'), ('east', 'Playroom_(2, 3)')]}, {'node': 'Bar_(1, 3)', 'node_moves': [('south', 'Kitchen_(1, 2)'), ('west', 'Home gym_(0, 3)'), ('east', 'Playroom_(2, 3)')]}, {'node': 'Bar_(1, 3)', 'node_moves': [('south', 'Kitchen_(1, 2)'), ('west', 'Home gym_(0, 3)'), ('east', 'Playroom_(2, 3)')]}, {'node': 'Home gym_(0, 3)', 'node_moves': [('south', 'Bedroom_(0, 2)'), ('east', 'Bar_(1, 3)')]}, {'node': 'Home gym_(0, 3)', 'node_moves': [('south', 'Bedroom_(0, 2)'), ('east', 'Bar_(1, 3)')]}, {'node': 'Bedroom_(0, 2)', 'node_moves': [('north', 'Home gym_(0, 3)')]}, {'node': 'Playroom_(2, 3)', 'node_moves': [('west', 'Bar_(1, 3)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Playroom', 2)", "Second_Question_Answer": "('Bathroom', 2)", "Third_Question_Answer": "('Pantry', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 2): 'Bathroom', (2, 1): 'Bathroom', (2, 3): 'Playroom', (1, 1): 'Playroom', (1, 2): 'Kitchen', (1, 3): 'Bar', (0, 3): 'Home gym', (0, 2): 'Bedroom'}", "Strict": true}, {"game_id": 19, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Solarium_(1, 0)', 'Bathroom_(0, 0)', 'Recreation room_(0, 1)', 'Foyer_(1, 1)', 'Attic_(2, 1)', 'Recreation room_(3, 1)', 'Bathroom_(3, 0)', 'Studio_(2, 0)']", "Graph_Edges": "[('Solarium_(1, 0)', 'Bathroom_(0, 0)'), ('Solarium_(1, 0)', 'Foyer_(1, 1)'), ('Bathroom_(0, 0)', 'Recreation room_(0, 1)'), ('Foyer_(1, 1)', 'Attic_(2, 1)'), ('Attic_(2, 1)', 'Recreation room_(3, 1)'), ('Recreation room_(3, 1)', 'Bathroom_(3, 0)'), ('Bathroom_(3, 0)', 'Studio_(2, 0)')]", "Current_Position": "Bathroom_(0, 0)", "Picture_Name": "graph_5531.png", "Directions": "[('Solarium_(1, 0)', ['west', 'north']), ('Bathroom_(0, 0)', ['east', 'north']), ('Recreation room_(0, 1)', ['south']), ('Foyer_(1, 1)', ['south', 'east']), ('Attic_(2, 1)', ['west', 'east']), ('Recreation room_(3, 1)', ['west', 'south']), ('Bathroom_(3, 0)', ['west', 'north']), ('Studio_(2, 0)', ['east'])]", "Moves": "[{'node': 'Solarium_(1, 0)', 'node_moves': [('west', 'Bathroom_(0, 0)'), ('north', 'Foyer_(1, 1)')]}, {'node': 'Solarium_(1, 0)', 'node_moves': [('west', 'Bathroom_(0, 0)'), ('north', 'Foyer_(1, 1)')]}, {'node': 'Bathroom_(0, 0)', 'node_moves': [('east', 'Solarium_(1, 0)'), ('north', 'Recreation room_(0, 1)')]}, {'node': 'Bathroom_(0, 0)', 'node_moves': [('east', 'Solarium_(1, 0)'), ('north', 'Recreation room_(0, 1)')]}, {'node': 'Recreation room_(0, 1)', 'node_moves': [('south', 'Bathroom_(0, 0)')]}, {'node': 'Foyer_(1, 1)', 'node_moves': [('south', 'Solarium_(1, 0)'), ('east', 'Attic_(2, 1)')]}, {'node': 'Foyer_(1, 1)', 'node_moves': [('south', 'Solarium_(1, 0)'), ('east', 'Attic_(2, 1)')]}, {'node': 'Attic_(2, 1)', 'node_moves': [('west', 'Foyer_(1, 1)'), ('east', 'Recreation room_(3, 1)')]}, {'node': 'Attic_(2, 1)', 'node_moves': [('west', 'Foyer_(1, 1)'), ('east', 'Recreation room_(3, 1)')]}, {'node': 'Recreation room_(3, 1)', 'node_moves': [('west', 'Attic_(2, 1)'), ('south', 'Bathroom_(3, 0)')]}, {'node': 'Recreation room_(3, 1)', 'node_moves': [('west', 'Attic_(2, 1)'), ('south', 'Bathroom_(3, 0)')]}, {'node': 'Bathroom_(3, 0)', 'node_moves': [('west', 'Studio_(2, 0)'), ('north', 'Recreation room_(3, 1)')]}, {'node': 'Bathroom_(3, 0)', 'node_moves': [('west', 'Studio_(2, 0)'), ('north', 'Recreation room_(3, 1)')]}, {'node': 'Studio_(2, 0)', 'node_moves': [('east', 'Bathroom_(3, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Recreation room', 2)", "Second_Question_Answer": "('Bathroom', 2)", "Third_Question_Answer": "('Craft room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(3, 1): 'Recreation room', (0, 1): 'Recreation room', (0, 0): 'Bathroom', (3, 0): 'Bathroom', (1, 0): 'Solarium', (1, 1): 'Foyer', (2, 1): 'Attic', (2, 0): 'Studio'}", "Strict": true}]}, {"name": "strong", "game_instances": [{"game_id": 20, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Music room_(2, 1)', 'Home theater_(2, 0)', 'Dining room_(3, 1)', 'Garage_(3, 2)', 'Wine cellar_(3, 3)', 'Garage_(2, 3)', 'Music room_(1, 3)', 'Dining room_(2, 2)']", "Graph_Edges": "[('Music room_(2, 1)', 'Home theater_(2, 0)'), ('Music room_(2, 1)', 'Dining room_(3, 1)'), ('Dining room_(3, 1)', 'Garage_(3, 2)'), ('Garage_(3, 2)', 'Wine cellar_(3, 3)'), ('Wine cellar_(3, 3)', 'Garage_(2, 3)'), ('Garage_(2, 3)', 'Music room_(1, 3)'), ('Garage_(2, 3)', 'Dining room_(2, 2)')]", "Current_Position": "Garage_(2, 3)", "Picture_Name": "graph_4675.png", "Directions": "[('Music room_(2, 1)', ['south', 'east']), ('Home theater_(2, 0)', ['north']), ('Dining room_(3, 1)', ['west', 'north']), ('Garage_(3, 2)', ['south', 'north']), ('Wine cellar_(3, 3)', ['west', 'south']), ('Garage_(2, 3)', ['west', 'south', 'east']), ('Music room_(1, 3)', ['east']), ('Dining room_(2, 2)', ['north'])]", "Moves": "[{'node': 'Music room_(2, 1)', 'node_moves': [('south', 'Home theater_(2, 0)'), ('east', 'Dining room_(3, 1)')]}, {'node': 'Music room_(2, 1)', 'node_moves': [('south', 'Home theater_(2, 0)'), ('east', 'Dining room_(3, 1)')]}, {'node': 'Home theater_(2, 0)', 'node_moves': [('north', 'Music room_(2, 1)')]}, {'node': 'Dining room_(3, 1)', 'node_moves': [('west', 'Music room_(2, 1)'), ('north', 'Garage_(3, 2)')]}, {'node': 'Dining room_(3, 1)', 'node_moves': [('west', 'Music room_(2, 1)'), ('north', 'Garage_(3, 2)')]}, {'node': 'Garage_(3, 2)', 'node_moves': [('south', 'Dining room_(3, 1)'), ('north', 'Wine cellar_(3, 3)')]}, {'node': 'Garage_(3, 2)', 'node_moves': [('south', 'Dining room_(3, 1)'), ('north', 'Wine cellar_(3, 3)')]}, {'node': 'Wine cellar_(3, 3)', 'node_moves': [('west', 'Garage_(2, 3)'), ('south', 'Garage_(3, 2)')]}, {'node': 'Wine cellar_(3, 3)', 'node_moves': [('west', 'Garage_(2, 3)'), ('south', 'Garage_(3, 2)')]}, {'node': 'Garage_(2, 3)', 'node_moves': [('west', 'Music room_(1, 3)'), ('south', 'Dining room_(2, 2)'), ('east', 'Wine cellar_(3, 3)')]}, {'node': 'Garage_(2, 3)', 'node_moves': [('west', 'Music room_(1, 3)'), ('south', 'Dining room_(2, 2)'), ('east', 'Wine cellar_(3, 3)')]}, {'node': 'Garage_(2, 3)', 'node_moves': [('west', 'Music room_(1, 3)'), ('south', 'Dining room_(2, 2)'), ('east', 'Wine cellar_(3, 3)')]}, {'node': 'Music room_(1, 3)', 'node_moves': [('east', 'Garage_(2, 3)')]}, {'node': 'Dining room_(2, 2)', 'node_moves': [('north', 'Garage_(2, 3)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Garage', 2)", "Second_Question_Answer": "('Dining room', 2)", "Third_Question_Answer": "('Playroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 1): 'Music room', (1, 3): 'Music room', (3, 2): 'Garage', (2, 3): 'Garage', (2, 2): 'Dining room', (3, 1): 'Dining room', (2, 0): 'Home theater', (3, 3): 'Wine cellar'}", "Strict": true}, {"game_id": 21, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Garage_(2, 0)', 'Utility room_(1, 0)', 'Library_(0, 0)', 'Gallery_(0, 1)', 'Gallery_(1, 1)', 'Playroom_(1, 2)', 'Garage_(2, 2)', 'Utility room_(2, 1)']", "Graph_Edges": "[('Garage_(2, 0)', 'Utility room_(1, 0)'), ('Utility room_(1, 0)', 'Library_(0, 0)'), ('Library_(0, 0)', 'Gallery_(0, 1)'), ('Gallery_(0, 1)', 'Gallery_(1, 1)'), ('Gallery_(1, 1)', 'Playroom_(1, 2)'), ('Playroom_(1, 2)', 'Garage_(2, 2)'), ('Garage_(2, 2)', 'Utility room_(2, 1)')]", "Current_Position": "Utility room_(1, 0)", "Picture_Name": "graph_8430.png", "Directions": "[('Garage_(2, 0)', ['west']), ('Utility room_(1, 0)', ['west', 'east']), ('Library_(0, 0)', ['east', 'north']), ('Gallery_(0, 1)', ['south', 'east']), ('Gallery_(1, 1)', ['west', 'north']), ('Playroom_(1, 2)', ['south', 'east']), ('Garage_(2, 2)', ['west', 'south']), ('Utility room_(2, 1)', ['north'])]", "Moves": "[{'node': 'Garage_(2, 0)', 'node_moves': [('west', 'Utility room_(1, 0)')]}, {'node': 'Utility room_(1, 0)', 'node_moves': [('west', 'Library_(0, 0)'), ('east', 'Garage_(2, 0)')]}, {'node': 'Utility room_(1, 0)', 'node_moves': [('west', 'Library_(0, 0)'), ('east', 'Garage_(2, 0)')]}, {'node': 'Library_(0, 0)', 'node_moves': [('east', 'Utility room_(1, 0)'), ('north', 'Gallery_(0, 1)')]}, {'node': 'Library_(0, 0)', 'node_moves': [('east', 'Utility room_(1, 0)'), ('north', 'Gallery_(0, 1)')]}, {'node': 'Gallery_(0, 1)', 'node_moves': [('south', 'Library_(0, 0)'), ('east', 'Gallery_(1, 1)')]}, {'node': 'Gallery_(0, 1)', 'node_moves': [('south', 'Library_(0, 0)'), ('east', 'Gallery_(1, 1)')]}, {'node': 'Gallery_(1, 1)', 'node_moves': [('west', 'Gallery_(0, 1)'), ('north', 'Playroom_(1, 2)')]}, {'node': 'Gallery_(1, 1)', 'node_moves': [('west', 'Gallery_(0, 1)'), ('north', 'Playroom_(1, 2)')]}, {'node': 'Playroom_(1, 2)', 'node_moves': [('south', 'Gallery_(1, 1)'), ('east', 'Garage_(2, 2)')]}, {'node': 'Playroom_(1, 2)', 'node_moves': [('south', 'Gallery_(1, 1)'), ('east', 'Garage_(2, 2)')]}, {'node': 'Garage_(2, 2)', 'node_moves': [('west', 'Playroom_(1, 2)'), ('south', 'Utility room_(2, 1)')]}, {'node': 'Garage_(2, 2)', 'node_moves': [('west', 'Playroom_(1, 2)'), ('south', 'Utility room_(2, 1)')]}, {'node': 'Utility room_(2, 1)', 'node_moves': [('north', 'Garage_(2, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Garage', 2)", "Second_Question_Answer": "('Utility room', 2)", "Third_Question_Answer": "('Bedroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 1): 'Gallery', (1, 1): 'Gallery', (2, 1): 'Utility room', (1, 0): 'Utility room', (2, 0): 'Garage', (2, 2): 'Garage', (0, 0): 'Library', (1, 2): 'Playroom'}", "Strict": true}, {"game_id": 22, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Gallery_(3, 3)', 'Wine cellar_(2, 3)', 'Gallery_(1, 3)', 'Bedroom_(0, 3)', 'Bedroom_(0, 2)', 'Foyer_(1, 2)', 'Study room_(1, 1)', 'Study room_(0, 1)']", "Graph_Edges": "[('Gallery_(3, 3)', 'Wine cellar_(2, 3)'), ('Wine cellar_(2, 3)', 'Gallery_(1, 3)'), ('Gallery_(1, 3)', 'Bedroom_(0, 3)'), ('Gallery_(1, 3)', 'Foyer_(1, 2)'), ('Bedroom_(0, 3)', 'Bedroom_(0, 2)'), ('Foyer_(1, 2)', 'Study room_(1, 1)'), ('Study room_(1, 1)', 'Study room_(0, 1)')]", "Current_Position": "Foyer_(1, 2)", "Picture_Name": "graph_9942.png", "Directions": "[('Gallery_(3, 3)', ['west']), ('Wine cellar_(2, 3)', ['west', 'east']), ('Gallery_(1, 3)', ['west', 'south', 'east']), ('Bedroom_(0, 3)', ['south', 'east']), ('Bedroom_(0, 2)', ['north']), ('Foyer_(1, 2)', ['south', 'north']), ('Study room_(1, 1)', ['west', 'north']), ('Study room_(0, 1)', ['east'])]", "Moves": "[{'node': 'Gallery_(3, 3)', 'node_moves': [('west', 'Wine cellar_(2, 3)')]}, {'node': 'Wine cellar_(2, 3)', 'node_moves': [('west', 'Gallery_(1, 3)'), ('east', 'Gallery_(3, 3)')]}, {'node': 'Wine cellar_(2, 3)', 'node_moves': [('west', 'Gallery_(1, 3)'), ('east', 'Gallery_(3, 3)')]}, {'node': 'Gallery_(1, 3)', 'node_moves': [('west', 'Bedroom_(0, 3)'), ('south', 'Foyer_(1, 2)'), ('east', 'Wine cellar_(2, 3)')]}, {'node': 'Gallery_(1, 3)', 'node_moves': [('west', 'Bedroom_(0, 3)'), ('south', 'Foyer_(1, 2)'), ('east', 'Wine cellar_(2, 3)')]}, {'node': 'Gallery_(1, 3)', 'node_moves': [('west', 'Bedroom_(0, 3)'), ('south', 'Foyer_(1, 2)'), ('east', 'Wine cellar_(2, 3)')]}, {'node': 'Bedroom_(0, 3)', 'node_moves': [('south', 'Bedroom_(0, 2)'), ('east', 'Gallery_(1, 3)')]}, {'node': 'Bedroom_(0, 3)', 'node_moves': [('south', 'Bedroom_(0, 2)'), ('east', 'Gallery_(1, 3)')]}, {'node': 'Bedroom_(0, 2)', 'node_moves': [('north', 'Bedroom_(0, 3)')]}, {'node': 'Foyer_(1, 2)', 'node_moves': [('south', 'Study room_(1, 1)'), ('north', 'Gallery_(1, 3)')]}, {'node': 'Foyer_(1, 2)', 'node_moves': [('south', 'Study room_(1, 1)'), ('north', 'Gallery_(1, 3)')]}, {'node': 'Study room_(1, 1)', 'node_moves': [('west', 'Study room_(0, 1)'), ('north', 'Foyer_(1, 2)')]}, {'node': 'Study room_(1, 1)', 'node_moves': [('west', 'Study room_(0, 1)'), ('north', 'Foyer_(1, 2)')]}, {'node': 'Study room_(0, 1)', 'node_moves': [('east', 'Study room_(1, 1)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Bedroom', 2)", "Second_Question_Answer": "('Gallery', 2)", "Third_Question_Answer": "('Kitchen', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 2): 'Bedroom', (0, 3): 'Bedroom', (1, 3): 'Gallery', (3, 3): 'Gallery', (0, 1): 'Study room', (1, 1): 'Study room', (2, 3): 'Wine cellar', (1, 2): 'Foyer'}", "Strict": true}, {"game_id": 23, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Attic_(1, 0)', 'Cellar_(2, 0)', 'Home gym_(0, 0)', 'Sunroom_(0, 1)', 'Sunroom_(1, 1)', 'Sunroom_(0, 2)', 'Playroom_(1, 2)', 'Laundry room_(2, 2)']", "Graph_Edges": "[('Attic_(1, 0)', 'Cellar_(2, 0)'), ('Attic_(1, 0)', 'Home gym_(0, 0)'), ('Home gym_(0, 0)', 'Sunroom_(0, 1)'), ('Sunroom_(0, 1)', 'Sunroom_(1, 1)'), ('Sunroom_(0, 1)', 'Sunroom_(0, 2)'), ('Sunroom_(0, 2)', 'Playroom_(1, 2)'), ('Playroom_(1, 2)', 'Laundry room_(2, 2)')]", "Current_Position": "Attic_(1, 0)", "Picture_Name": "graph_3031.png", "Directions": "[('Attic_(1, 0)', ['west', 'east']), ('Cellar_(2, 0)', ['west']), ('Home gym_(0, 0)', ['east', 'north']), ('Sunroom_(0, 1)', ['south', 'east', 'north']), ('Sunroom_(1, 1)', ['west']), ('Sunroom_(0, 2)', ['south', 'east']), ('Playroom_(1, 2)', ['west', 'east']), ('Laundry room_(2, 2)', ['west'])]", "Moves": "[{'node': 'Attic_(1, 0)', 'node_moves': [('west', 'Home gym_(0, 0)'), ('east', 'Cellar_(2, 0)')]}, {'node': 'Attic_(1, 0)', 'node_moves': [('west', 'Home gym_(0, 0)'), ('east', 'Cellar_(2, 0)')]}, {'node': 'Cellar_(2, 0)', 'node_moves': [('west', 'Attic_(1, 0)')]}, {'node': 'Home gym_(0, 0)', 'node_moves': [('east', 'Attic_(1, 0)'), ('north', 'Sunroom_(0, 1)')]}, {'node': 'Home gym_(0, 0)', 'node_moves': [('east', 'Attic_(1, 0)'), ('north', 'Sunroom_(0, 1)')]}, {'node': 'Sunroom_(0, 1)', 'node_moves': [('south', 'Home gym_(0, 0)'), ('east', 'Sunroom_(1, 1)'), ('north', 'Sunroom_(0, 2)')]}, {'node': 'Sunroom_(0, 1)', 'node_moves': [('south', 'Home gym_(0, 0)'), ('east', 'Sunroom_(1, 1)'), ('north', 'Sunroom_(0, 2)')]}, {'node': 'Sunroom_(0, 1)', 'node_moves': [('south', 'Home gym_(0, 0)'), ('east', 'Sunroom_(1, 1)'), ('north', 'Sunroom_(0, 2)')]}, {'node': 'Sunroom_(1, 1)', 'node_moves': [('west', 'Sunroom_(0, 1)')]}, {'node': 'Sunroom_(0, 2)', 'node_moves': [('south', 'Sunroom_(0, 1)'), ('east', 'Playroom_(1, 2)')]}, {'node': 'Sunroom_(0, 2)', 'node_moves': [('south', 'Sunroom_(0, 1)'), ('east', 'Playroom_(1, 2)')]}, {'node': 'Playroom_(1, 2)', 'node_moves': [('west', 'Sunroom_(0, 2)'), ('east', 'Laundry room_(2, 2)')]}, {'node': 'Playroom_(1, 2)', 'node_moves': [('west', 'Sunroom_(0, 2)'), ('east', 'Laundry room_(2, 2)')]}, {'node': 'Laundry room_(2, 2)', 'node_moves': [('west', 'Playroom_(1, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [1, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Sunroom', 3)", "Second_Question_Answer": "('Laundry room', 1)", "Third_Question_Answer": "('Study room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 1): 'Sunroom', (1, 1): 'Sunroom', (0, 2): 'Sunroom', (1, 0): 'Attic', (2, 0): 'Cellar', (0, 0): 'Home gym', (1, 2): 'Playroom', (2, 2): 'Laundry room'}", "Strict": true}, {"game_id": 24, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Home office_(3, 2)', 'Home office_(3, 1)', 'Garage_(2, 1)', 'Nursery_(3, 3)', 'Bar_(2, 3)', 'Sauna_(1, 3)', 'Nursery_(0, 3)', 'Garage_(0, 2)']", "Graph_Edges": "[('Home office_(3, 2)', 'Home office_(3, 1)'), ('Home office_(3, 2)', 'Nursery_(3, 3)'), ('Home office_(3, 1)', 'Garage_(2, 1)'), ('Nursery_(3, 3)', 'Bar_(2, 3)'), ('Bar_(2, 3)', 'Sauna_(1, 3)'), ('Sauna_(1, 3)', 'Nursery_(0, 3)'), ('Nursery_(0, 3)', 'Garage_(0, 2)')]", "Current_Position": "Nursery_(3, 3)", "Picture_Name": "graph_5660.png", "Directions": "[('Home office_(3, 2)', ['south', 'north']), ('Home office_(3, 1)', ['west', 'north']), ('Garage_(2, 1)', ['east']), ('Nursery_(3, 3)', ['west', 'south']), ('Bar_(2, 3)', ['west', 'east']), ('Sauna_(1, 3)', ['west', 'east']), ('Nursery_(0, 3)', ['south', 'east']), ('Garage_(0, 2)', ['north'])]", "Moves": "[{'node': 'Home office_(3, 2)', 'node_moves': [('south', 'Home office_(3, 1)'), ('north', 'Nursery_(3, 3)')]}, {'node': 'Home office_(3, 2)', 'node_moves': [('south', 'Home office_(3, 1)'), ('north', 'Nursery_(3, 3)')]}, {'node': 'Home office_(3, 1)', 'node_moves': [('west', 'Garage_(2, 1)'), ('north', 'Home office_(3, 2)')]}, {'node': 'Home office_(3, 1)', 'node_moves': [('west', 'Garage_(2, 1)'), ('north', 'Home office_(3, 2)')]}, {'node': 'Garage_(2, 1)', 'node_moves': [('east', 'Home office_(3, 1)')]}, {'node': 'Nursery_(3, 3)', 'node_moves': [('west', 'Bar_(2, 3)'), ('south', 'Home office_(3, 2)')]}, {'node': 'Nursery_(3, 3)', 'node_moves': [('west', 'Bar_(2, 3)'), ('south', 'Home office_(3, 2)')]}, {'node': 'Bar_(2, 3)', 'node_moves': [('west', 'Sauna_(1, 3)'), ('east', 'Nursery_(3, 3)')]}, {'node': 'Bar_(2, 3)', 'node_moves': [('west', 'Sauna_(1, 3)'), ('east', 'Nursery_(3, 3)')]}, {'node': 'Sauna_(1, 3)', 'node_moves': [('west', 'Nursery_(0, 3)'), ('east', 'Bar_(2, 3)')]}, {'node': 'Sauna_(1, 3)', 'node_moves': [('west', 'Nursery_(0, 3)'), ('east', 'Bar_(2, 3)')]}, {'node': 'Nursery_(0, 3)', 'node_moves': [('south', 'Garage_(0, 2)'), ('east', 'Sauna_(1, 3)')]}, {'node': 'Nursery_(0, 3)', 'node_moves': [('south', 'Garage_(0, 2)'), ('east', 'Sauna_(1, 3)')]}, {'node': 'Garage_(0, 2)', 'node_moves': [('north', 'Nursery_(0, 3)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Garage', 2)", "Second_Question_Answer": "('Nursery', 2)", "Third_Question_Answer": "('Utility room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(3, 2): 'Home office', (3, 1): 'Home office', (0, 3): 'Nursery', (3, 3): 'Nursery', (2, 1): 'Garage', (0, 2): 'Garage', (2, 3): 'Bar', (1, 3): 'Sauna'}", "Strict": true}, {"game_id": 25, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Bedroom_(0, 2)', 'Attic_(0, 1)', 'Library_(1, 1)', 'Sunroom_(2, 1)', 'Bedroom_(2, 2)', 'Library_(2, 3)', 'Bedroom_(3, 3)', 'Library_(3, 2)']", "Graph_Edges": "[('Bedroom_(0, 2)', 'Attic_(0, 1)'), ('Attic_(0, 1)', 'Library_(1, 1)'), ('Library_(1, 1)', 'Sunroom_(2, 1)'), ('Sunroom_(2, 1)', 'Bedroom_(2, 2)'), ('Bedroom_(2, 2)', 'Library_(2, 3)'), ('Library_(2, 3)', 'Bedroom_(3, 3)'), ('Bedroom_(3, 3)', 'Library_(3, 2)')]", "Current_Position": "Library_(3, 2)", "Picture_Name": "graph_8828.png", "Directions": "[('Bedroom_(0, 2)', ['south']), ('Attic_(0, 1)', ['east', 'north']), ('Library_(1, 1)', ['west', 'east']), ('Sunroom_(2, 1)', ['west', 'north']), ('Bedroom_(2, 2)', ['south', 'north']), ('Library_(2, 3)', ['south', 'east']), ('Bedroom_(3, 3)', ['west', 'south']), ('Library_(3, 2)', ['north'])]", "Moves": "[{'node': 'Bedroom_(0, 2)', 'node_moves': [('south', 'Attic_(0, 1)')]}, {'node': 'Attic_(0, 1)', 'node_moves': [('east', 'Library_(1, 1)'), ('north', 'Bedroom_(0, 2)')]}, {'node': 'Attic_(0, 1)', 'node_moves': [('east', 'Library_(1, 1)'), ('north', 'Bedroom_(0, 2)')]}, {'node': 'Library_(1, 1)', 'node_moves': [('west', 'Attic_(0, 1)'), ('east', 'Sunroom_(2, 1)')]}, {'node': 'Library_(1, 1)', 'node_moves': [('west', 'Attic_(0, 1)'), ('east', 'Sunroom_(2, 1)')]}, {'node': 'Sunroom_(2, 1)', 'node_moves': [('west', 'Library_(1, 1)'), ('north', 'Bedroom_(2, 2)')]}, {'node': 'Sunroom_(2, 1)', 'node_moves': [('west', 'Library_(1, 1)'), ('north', 'Bedroom_(2, 2)')]}, {'node': 'Bedroom_(2, 2)', 'node_moves': [('south', 'Sunroom_(2, 1)'), ('north', 'Library_(2, 3)')]}, {'node': 'Bedroom_(2, 2)', 'node_moves': [('south', 'Sunroom_(2, 1)'), ('north', 'Library_(2, 3)')]}, {'node': 'Library_(2, 3)', 'node_moves': [('south', 'Bedroom_(2, 2)'), ('east', 'Bedroom_(3, 3)')]}, {'node': 'Library_(2, 3)', 'node_moves': [('south', 'Bedroom_(2, 2)'), ('east', 'Bedroom_(3, 3)')]}, {'node': 'Bedroom_(3, 3)', 'node_moves': [('west', 'Library_(2, 3)'), ('south', 'Library_(3, 2)')]}, {'node': 'Bedroom_(3, 3)', 'node_moves': [('west', 'Library_(2, 3)'), ('south', 'Library_(3, 2)')]}, {'node': 'Library_(3, 2)', 'node_moves': [('north', 'Bedroom_(3, 3)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Library', 3)", "Second_Question_Answer": "('Bedroom', 3)", "Third_Question_Answer": "('Music room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(1, 1): 'Library', (2, 3): 'Library', (3, 2): 'Library', (3, 3): 'Bedroom', (0, 2): 'Bedroom', (2, 2): 'Bedroom', (0, 1): 'Attic', (2, 1): 'Sunroom'}", "Strict": true}, {"game_id": 26, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Nursery_(3, 3)', 'Bathroom_(2, 3)', 'Living room_(2, 2)', 'Home office_(2, 1)', 'Home office_(1, 1)', 'Nursery_(1, 2)', 'Solarium_(1, 3)', 'Solarium_(0, 3)']", "Graph_Edges": "[('Nursery_(3, 3)', 'Bathroom_(2, 3)'), ('Bathroom_(2, 3)', 'Living room_(2, 2)'), ('Living room_(2, 2)', 'Home office_(2, 1)'), ('Home office_(2, 1)', 'Home office_(1, 1)'), ('Home office_(1, 1)', 'Nursery_(1, 2)'), ('Nursery_(1, 2)', 'Solarium_(1, 3)'), ('Solarium_(1, 3)', 'Solarium_(0, 3)')]", "Current_Position": "Home office_(1, 1)", "Picture_Name": "graph_7780.png", "Directions": "[('Nursery_(3, 3)', ['west']), ('Bathroom_(2, 3)', ['south', 'east']), ('Living room_(2, 2)', ['south', 'north']), ('Home office_(2, 1)', ['west', 'north']), ('Home office_(1, 1)', ['east', 'north']), ('Nursery_(1, 2)', ['south', 'north']), ('Solarium_(1, 3)', ['west', 'south']), ('Solarium_(0, 3)', ['east'])]", "Moves": "[{'node': 'Nursery_(3, 3)', 'node_moves': [('west', 'Bathroom_(2, 3)')]}, {'node': 'Bathroom_(2, 3)', 'node_moves': [('south', 'Living room_(2, 2)'), ('east', 'Nursery_(3, 3)')]}, {'node': 'Bathroom_(2, 3)', 'node_moves': [('south', 'Living room_(2, 2)'), ('east', 'Nursery_(3, 3)')]}, {'node': 'Living room_(2, 2)', 'node_moves': [('south', 'Home office_(2, 1)'), ('north', 'Bathroom_(2, 3)')]}, {'node': 'Living room_(2, 2)', 'node_moves': [('south', 'Home office_(2, 1)'), ('north', 'Bathroom_(2, 3)')]}, {'node': 'Home office_(2, 1)', 'node_moves': [('west', 'Home office_(1, 1)'), ('north', 'Living room_(2, 2)')]}, {'node': 'Home office_(2, 1)', 'node_moves': [('west', 'Home office_(1, 1)'), ('north', 'Living room_(2, 2)')]}, {'node': 'Home office_(1, 1)', 'node_moves': [('east', 'Home office_(2, 1)'), ('north', 'Nursery_(1, 2)')]}, {'node': 'Home office_(1, 1)', 'node_moves': [('east', 'Home office_(2, 1)'), ('north', 'Nursery_(1, 2)')]}, {'node': 'Nursery_(1, 2)', 'node_moves': [('south', 'Home office_(1, 1)'), ('north', 'Solarium_(1, 3)')]}, {'node': 'Nursery_(1, 2)', 'node_moves': [('south', 'Home office_(1, 1)'), ('north', 'Solarium_(1, 3)')]}, {'node': 'Solarium_(1, 3)', 'node_moves': [('west', 'Solarium_(0, 3)'), ('south', 'Nursery_(1, 2)')]}, {'node': 'Solarium_(1, 3)', 'node_moves': [('west', 'Solarium_(0, 3)'), ('south', 'Nursery_(1, 2)')]}, {'node': 'Solarium_(0, 3)', 'node_moves': [('east', 'Solarium_(1, 3)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Solarium', 2)", "Second_Question_Answer": "('Nursery', 2)", "Third_Question_Answer": "('Craft room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(0, 3): 'Solarium', (1, 3): 'Solarium', (1, 2): 'Nursery', (3, 3): 'Nursery', (2, 1): 'Home office', (1, 1): 'Home office', (2, 3): 'Bathroom', (2, 2): 'Living room'}", "Strict": true}, {"game_id": 27, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Bathroom_(1, 3)', 'Craft room_(2, 3)', 'Craft room_(3, 3)', 'Home office_(3, 2)', 'Closet_(2, 2)', 'Craft room_(2, 1)', 'Home office_(2, 0)', 'Home office_(1, 0)']", "Graph_Edges": "[('Bathroom_(1, 3)', 'Craft room_(2, 3)'), ('Craft room_(2, 3)', 'Craft room_(3, 3)'), ('Craft room_(3, 3)', 'Home office_(3, 2)'), ('Home office_(3, 2)', 'Closet_(2, 2)'), ('Closet_(2, 2)', 'Craft room_(2, 1)'), ('Craft room_(2, 1)', 'Home office_(2, 0)'), ('Home office_(2, 0)', 'Home office_(1, 0)')]", "Current_Position": "Craft room_(2, 3)", "Picture_Name": "graph_7278.png", "Directions": "[('Bathroom_(1, 3)', ['east']), ('Craft room_(2, 3)', ['west', 'east']), ('Craft room_(3, 3)', ['west', 'south']), ('Home office_(3, 2)', ['west', 'north']), ('Closet_(2, 2)', ['south', 'east']), ('Craft room_(2, 1)', ['south', 'north']), ('Home office_(2, 0)', ['west', 'north']), ('Home office_(1, 0)', ['east'])]", "Moves": "[{'node': 'Bathroom_(1, 3)', 'node_moves': [('east', 'Craft room_(2, 3)')]}, {'node': 'Craft room_(2, 3)', 'node_moves': [('west', 'Bathroom_(1, 3)'), ('east', 'Craft room_(3, 3)')]}, {'node': 'Craft room_(2, 3)', 'node_moves': [('west', 'Bathroom_(1, 3)'), ('east', 'Craft room_(3, 3)')]}, {'node': 'Craft room_(3, 3)', 'node_moves': [('west', 'Craft room_(2, 3)'), ('south', 'Home office_(3, 2)')]}, {'node': 'Craft room_(3, 3)', 'node_moves': [('west', 'Craft room_(2, 3)'), ('south', 'Home office_(3, 2)')]}, {'node': 'Home office_(3, 2)', 'node_moves': [('west', 'Closet_(2, 2)'), ('north', 'Craft room_(3, 3)')]}, {'node': 'Home office_(3, 2)', 'node_moves': [('west', 'Closet_(2, 2)'), ('north', 'Craft room_(3, 3)')]}, {'node': 'Closet_(2, 2)', 'node_moves': [('south', 'Craft room_(2, 1)'), ('east', 'Home office_(3, 2)')]}, {'node': 'Closet_(2, 2)', 'node_moves': [('south', 'Craft room_(2, 1)'), ('east', 'Home office_(3, 2)')]}, {'node': 'Craft room_(2, 1)', 'node_moves': [('south', 'Home office_(2, 0)'), ('north', 'Closet_(2, 2)')]}, {'node': 'Craft room_(2, 1)', 'node_moves': [('south', 'Home office_(2, 0)'), ('north', 'Closet_(2, 2)')]}, {'node': 'Home office_(2, 0)', 'node_moves': [('west', 'Home office_(1, 0)'), ('north', 'Craft room_(2, 1)')]}, {'node': 'Home office_(2, 0)', 'node_moves': [('west', 'Home office_(1, 0)'), ('north', 'Craft room_(2, 1)')]}, {'node': 'Home office_(1, 0)', 'node_moves': [('east', 'Home office_(2, 0)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Craft room', 3)", "Second_Question_Answer": "('Home office', 3)", "Third_Question_Answer": "('Guest room', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 0): 'Home office', (1, 0): 'Home office', (3, 2): 'Home office', (2, 3): 'Craft room', (3, 3): 'Craft room', (2, 1): 'Craft room', (1, 3): 'Bathroom', (2, 2): 'Closet'}", "Strict": true}, {"game_id": 28, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Media room_(0, 0)', 'Exercise room_(0, 1)', 'Living room_(1, 1)', 'Wine cellar_(2, 1)', 'Exercise room_(3, 1)', 'Wine cellar_(2, 2)', 'Living room_(3, 2)', 'Garage_(1, 2)']", "Graph_Edges": "[('Media room_(0, 0)', 'Exercise room_(0, 1)'), ('Exercise room_(0, 1)', 'Living room_(1, 1)'), ('Living room_(1, 1)', 'Wine cellar_(2, 1)'), ('Wine cellar_(2, 1)', 'Exercise room_(3, 1)'), ('Wine cellar_(2, 1)', 'Wine cellar_(2, 2)'), ('Wine cellar_(2, 2)', 'Living room_(3, 2)'), ('Wine cellar_(2, 2)', 'Garage_(1, 2)')]", "Current_Position": "Media room_(0, 0)", "Picture_Name": "graph_2778.png", "Directions": "[('Media room_(0, 0)', ['north']), ('Exercise room_(0, 1)', ['south', 'east']), ('Living room_(1, 1)', ['west', 'east']), ('Wine cellar_(2, 1)', ['west', 'east', 'north']), ('Exercise room_(3, 1)', ['west']), ('Wine cellar_(2, 2)', ['west', 'south', 'east']), ('Living room_(3, 2)', ['west']), ('Garage_(1, 2)', ['east'])]", "Moves": "[{'node': 'Media room_(0, 0)', 'node_moves': [('north', 'Exercise room_(0, 1)')]}, {'node': 'Exercise room_(0, 1)', 'node_moves': [('south', 'Media room_(0, 0)'), ('east', 'Living room_(1, 1)')]}, {'node': 'Exercise room_(0, 1)', 'node_moves': [('south', 'Media room_(0, 0)'), ('east', 'Living room_(1, 1)')]}, {'node': 'Living room_(1, 1)', 'node_moves': [('west', 'Exercise room_(0, 1)'), ('east', 'Wine cellar_(2, 1)')]}, {'node': 'Living room_(1, 1)', 'node_moves': [('west', 'Exercise room_(0, 1)'), ('east', 'Wine cellar_(2, 1)')]}, {'node': 'Wine cellar_(2, 1)', 'node_moves': [('west', 'Living room_(1, 1)'), ('east', 'Exercise room_(3, 1)'), ('north', 'Wine cellar_(2, 2)')]}, {'node': 'Wine cellar_(2, 1)', 'node_moves': [('west', 'Living room_(1, 1)'), ('east', 'Exercise room_(3, 1)'), ('north', 'Wine cellar_(2, 2)')]}, {'node': 'Wine cellar_(2, 1)', 'node_moves': [('west', 'Living room_(1, 1)'), ('east', 'Exercise room_(3, 1)'), ('north', 'Wine cellar_(2, 2)')]}, {'node': 'Exercise room_(3, 1)', 'node_moves': [('west', 'Wine cellar_(2, 1)')]}, {'node': 'Wine cellar_(2, 2)', 'node_moves': [('west', 'Garage_(1, 2)'), ('south', 'Wine cellar_(2, 1)'), ('east', 'Living room_(3, 2)')]}, {'node': 'Wine cellar_(2, 2)', 'node_moves': [('west', 'Garage_(1, 2)'), ('south', 'Wine cellar_(2, 1)'), ('east', 'Living room_(3, 2)')]}, {'node': 'Wine cellar_(2, 2)', 'node_moves': [('west', 'Garage_(1, 2)'), ('south', 'Wine cellar_(2, 1)'), ('east', 'Living room_(3, 2)')]}, {'node': 'Living room_(3, 2)', 'node_moves': [('west', 'Wine cellar_(2, 2)')]}, {'node': 'Garage_(1, 2)', 'node_moves': [('east', 'Wine cellar_(2, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [3, 2], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Exercise room', 2)", "Second_Question_Answer": "('Wine cellar', 2)", "Third_Question_Answer": "('Sunroom', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(2, 2): 'Wine cellar', (2, 1): 'Wine cellar', (1, 1): 'Living room', (3, 2): 'Living room', (3, 1): 'Exercise room', (0, 1): 'Exercise room', (0, 0): 'Media room', (1, 2): 'Garage'}", "Strict": true}, {"game_id": 29, "Prompt": "Please help me with the following task. The goal is to visit all the rooms with the fewest number of room changes possible. In each room, you need to decide the direction to go in. Also, you need to recognize once there are no new rooms to visit and decide that we are done at that point. Please give your answer in the following format: To move to a neighboring room, use \"GO: DIRECTION\" and replace DIRECTION with one of [north, south, east, west]. To stop the exploration, answer with \"DONE\" instead. Omit any other text.\nHere is an example:\nYou are in the Kitchen. Currently available directions: south, west. What is your next instruction?\nGO: west\nYou have made a step and entered a Lobby. Currently available directions: east, north. What is your next instruction?\nGO: north\n...\nYou have made a step and entered a Bedroom. Currently available directions: south. What is your next instruction?\nDONE\nLet us start. You are in the $INITIAL_ROOM$. Currently available directions: $INITIAL_DIRECTIONS$. What is your next instruction?", "Player2_positive_answer": "You have made a step and entered $ANOTHER_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Player2_negative_answer": "The move is not valid. You are still in the $SAME_ROOM$. Currently available directions: $DIRECTIONS$. What is your next instruction?", "Move_Construction": "^GO:\\s*(north|east|west|south)$", "Stop_Construction": "^DONE$", "QA_Construction": "^Answer:\\s*(\\d+)\\s*$", "Grid_Dimension": "4", "Graph_Nodes": "['Pantry_(0, 3)', 'Sunroom_(1, 3)', 'Conservatory_(1, 2)', 'Sunroom_(0, 2)', 'Conservatory_(2, 3)', 'Home gym_(3, 3)', 'Conservatory_(3, 2)', 'Sunroom_(2, 2)']", "Graph_Edges": "[('Pantry_(0, 3)', 'Sunroom_(1, 3)'), ('Sunroom_(1, 3)', 'Conservatory_(1, 2)'), ('Sunroom_(1, 3)', 'Conservatory_(2, 3)'), ('Conservatory_(1, 2)', 'Sunroom_(0, 2)'), ('Conservatory_(2, 3)', 'Home gym_(3, 3)'), ('Home gym_(3, 3)', 'Conservatory_(3, 2)'), ('Conservatory_(3, 2)', 'Sunroom_(2, 2)')]", "Current_Position": "Conservatory_(1, 2)", "Picture_Name": "graph_2630.png", "Directions": "[('Pantry_(0, 3)', ['east']), ('Sunroom_(1, 3)', ['west', 'south', 'east']), ('Conservatory_(1, 2)', ['west', 'north']), ('Sunroom_(0, 2)', ['east']), ('Conservatory_(2, 3)', ['west', 'east']), ('Home gym_(3, 3)', ['west', 'south']), ('Conservatory_(3, 2)', ['west', 'north']), ('Sunroom_(2, 2)', ['east'])]", "Moves": "[{'node': 'Pantry_(0, 3)', 'node_moves': [('east', 'Sunroom_(1, 3)')]}, {'node': 'Sunroom_(1, 3)', 'node_moves': [('west', 'Pantry_(0, 3)'), ('south', 'Conservatory_(1, 2)'), ('east', 'Conservatory_(2, 3)')]}, {'node': 'Sunroom_(1, 3)', 'node_moves': [('west', 'Pantry_(0, 3)'), ('south', 'Conservatory_(1, 2)'), ('east', 'Conservatory_(2, 3)')]}, {'node': 'Sunroom_(1, 3)', 'node_moves': [('west', 'Pantry_(0, 3)'), ('south', 'Conservatory_(1, 2)'), ('east', 'Conservatory_(2, 3)')]}, {'node': 'Conservatory_(1, 2)', 'node_moves': [('west', 'Sunroom_(0, 2)'), ('north', 'Sunroom_(1, 3)')]}, {'node': 'Conservatory_(1, 2)', 'node_moves': [('west', 'Sunroom_(0, 2)'), ('north', 'Sunroom_(1, 3)')]}, {'node': 'Sunroom_(0, 2)', 'node_moves': [('east', 'Conservatory_(1, 2)')]}, {'node': 'Conservatory_(2, 3)', 'node_moves': [('west', 'Sunroom_(1, 3)'), ('east', 'Home gym_(3, 3)')]}, {'node': 'Conservatory_(2, 3)', 'node_moves': [('west', 'Sunroom_(1, 3)'), ('east', 'Home gym_(3, 3)')]}, {'node': 'Home gym_(3, 3)', 'node_moves': [('west', 'Conservatory_(2, 3)'), ('south', 'Conservatory_(3, 2)')]}, {'node': 'Home gym_(3, 3)', 'node_moves': [('west', 'Conservatory_(2, 3)'), ('south', 'Conservatory_(3, 2)')]}, {'node': 'Conservatory_(3, 2)', 'node_moves': [('west', 'Sunroom_(2, 2)'), ('north', 'Home gym_(3, 3)')]}, {'node': 'Conservatory_(3, 2)', 'node_moves': [('west', 'Sunroom_(2, 2)'), ('north', 'Home gym_(3, 3)')]}, {'node': 'Sunroom_(2, 2)', 'node_moves': [('east', 'Conservatory_(3, 2)')]}]", "Cycle": "cycle_false", "Ambiguity": [2, 3], "Game_Type": "named_graph", "Loop_Reminder": false, "Loop_Reminder_Text": "It seems like we are going back and forth between two rooms. To stop exploring choose 'DONE' as our next action.", "Max_Turns_Reminder": false, "Max_Turns_Reminder_Text": "We have been exploring for a while now. To stop exploring choose 'DONE' as our next action.", "Question": "How many different $ROOM_CATEGORY$(s) did you encounter?", "First_Question_Answer": "('Conservatory', 3)", "Second_Question_Answer": "('Sunroom', 3)", "Third_Question_Answer": "('Wine cellar', 0)", "Question_reprompt": "Now once you have stopped the game, you need to answer some questions in this format: 'Answer: <answer>' replace <answer> with an appropriate integer.", "Mapping": "{(1, 2): 'Conservatory', (2, 3): 'Conservatory', (3, 2): 'Conservatory', (1, 3): 'Sunroom', (2, 2): 'Sunroom', (0, 2): 'Sunroom', (0, 3): 'Pantry', (3, 3): 'Home gym'}", "Strict": true}]}]}